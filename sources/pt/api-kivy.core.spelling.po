# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-04 16:26\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 1.9.0\n"

# a658390e47da477eac7a502b27e551a6
#: ../../sources/api-kivy.core.spelling.rst:3
msgid "Spelling"
msgstr ""

# ef0daa0649e642f39bdb5a95f05fa2cd
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling:2
msgid "Provide abstracted access to a range of spellchecking backends.  Also provides word suggestions. The API is inspired by enchant, but other backends can be added that implement the same API."
msgstr ""

# 0607c990fd8c4e2fbc73c85b39ce8581
#: ../../<autodoc>:1
msgid "Bases: :class:`object`"
msgstr ""

# c93b9f121d464fce8a50116bca8c0604
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase:1
msgid "Base class for all spelling providers. Supports some abstract methods for checking words and getting suggestions."
msgstr ""

# aa4f64112ac04ef5a397c0cc239d1532
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:1
msgid "If `word` is a valid word in `self._language`, return True."
msgstr ""

# 881285dfbc1347bba5c1df9273ff03f1
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:5
msgid "The word to check. If the word is a valid word in the currently active language, True is returned. If the word shouldn't be checked, return None (e.g. for '')."
msgstr ""

# dfcc5a6a7c5d458b88adbcf4bb016680
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.list_languages:1
msgid "Return a list of all languages supported by the registered languages. E.g.: ['en', 'en_GB', 'en_US', 'de', ...]"
msgstr ""

# c10bf05f8f0a4fb4b5f1924b889d78c5
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:1
msgid "From the set of registered languages, select the first language for `language`."
msgstr ""

# 061484aee9a34f34900593011241cbdd
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:6
msgid "Language identifier. Needs to be one of the options returned by list_languages(). Sets the language used for spell checking and word suggestions."
msgstr ""

# 8c60dbf60edb479da7dcc3863b8d5ff7
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:1
msgid "For a given `fragment` (i.e., part of a word or a word by itself), provide corrections (`fragment` may be misspelled) or completions as a list of strings."
msgstr ""

# 5c204155a0604605b1db80388b074b00
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:7
msgid "The word fragment to get suggestions/corrections for. E.g.: 'foo' might become 'of', 'food' or 'foot'."
msgstr ""

# 1a803e7122d24ce699a50ee22e989a33
# b4da28d2734f48f1af88ddf50253942a
#: ../../<autodoc>:1
#: ../../<autodoc>:1
msgid "Bases: :class:`exceptions.Exception`"
msgstr ""

# eabaf6a0d9184a31a38bd95788287639
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoSuchLangError:1
msgid "Exception to be raised when a specific language could not be found."
msgstr ""

# 2e7141ce083d47f5ae1bd667a708ffed
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoLanguageSelectedError:1
msgid "Exception to be raised when a language-using method is called but no language was selected prior to the call."
msgstr ""
