# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-09-28 17:19\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: pt\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 1.9.0\n"

# 5ddcad0dc1ac43549508017c6c21bc53
#: ../../sources/api-kivy.core.spelling.rst:3
msgid "Spelling"
msgstr ""

# 23f6fd4e91534a7999e19d2aabe3da2f
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling:2
msgid "Provide abstracted access to a range of spellchecking backends.  Also provides word suggestions. The API is inspired by enchant, but other backends can be added that implement the same API."
msgstr ""

# 246a5cf92e134d0a951cf670a61961bb
#: ../../<autodoc>:1
msgid "Bases: :class:`object`"
msgstr ""

# 73184cba246146d19bf0215d501e66bc
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase:1
msgid "Base class for all spelling providers. Supports some abstract methods for checking words and getting suggestions."
msgstr ""

# 77e38b01d4574139949749330a86e263
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:1
msgid "If `word` is a valid word in `self._language`, return True."
msgstr ""

# 9c39fede32cd4a5f969b857ff5b253d4
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:5
msgid "The word to check. If the word is a valid word in the currently active language, True is returned. If the word shouldn't be checked, return None (e.g. for '')."
msgstr ""

# 7d5ae67cea4c49768637125f8189fd4f
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.list_languages:1
msgid "Return a list of all languages supported by the registered languages. E.g.: ['en', 'en_GB', 'en_US', 'de', ...]"
msgstr ""

# 53abbbd073cc486481923b0dd6b54875
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:1
msgid "From the set of registered languages, select the first language for `language`."
msgstr ""

# 06fd800b84394101a88cca79823a3d39
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:6
msgid "Language identifier. Needs to be one of the options returned by list_languages(). Sets the language used for spell checking and word suggestions."
msgstr ""

# 172e895c12ae46b99128cb714333f945
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:1
msgid "For a given `fragment` (i.e., part of a word or a word by itself), provide corrections (`fragment` may be misspelled) or completions as a list of strings."
msgstr ""

# 2070b8f7675344b497cc40055dc306f5
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:7
msgid "The word fragment to get suggestions/corrections for. E.g.: 'foo' might become 'of', 'food' or 'foot'."
msgstr ""

# 5b3140ac02c840e5986bf3568b4de1c3
# 93fa5832ad874c3ca96c21ef3c50dea8
#: ../../<autodoc>:1
#: ../../<autodoc>:1
msgid "Bases: :class:`exceptions.Exception`"
msgstr ""

# 4c8d6374acbc40a49648e5081fa489d8
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoSuchLangError:1
msgid "Exception to be raised when a specific language could not be found."
msgstr ""

# e8d0a0e023a24c3aab3561166ad8f9d1
#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoLanguageSelectedError:1
msgid "Exception to be raised when a language-using method is called but no language was selected prior to the call."
msgstr ""
