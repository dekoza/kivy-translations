# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-18 21:58\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/contribute-unittest.rst:2
# 9a30cccaf7424ef7afc5aead8db832e3
msgid "Unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:4
# b87ec2b8ac9c4466a4f637065522bd64
msgid "Unit tests are seperated in two cases:"
msgstr ""

#: ../../sources/contribute-unittest.rst:6
# 8e890a44308646a292b6c768f9f62e6c
msgid "Non graphics unit tests: theses are standard unit tests that can run in console"
msgstr ""

#: ../../sources/contribute-unittest.rst:7
# a4c48c6e30eb46d1ba14158320cb096c
msgid "Graphics unit tests: theses need a GL context, and work with image comparaison"
msgstr ""

#: ../../sources/contribute-unittest.rst:9
# 0a611600b7874c0fbe7c5339cdb2eade
msgid "To be able to run unit test, you need to install nose (http://code.google.com/p/python-nose/), and coverage (http://nedbatchelder.com/code/coverage/). You can use easy_install for that::"
msgstr ""

#: ../../sources/contribute-unittest.rst:15
# 7ddb4c65fbbb46329a43fb35b0153a11
msgid "Then, in the kivy directory::"
msgstr ""

#: ../../sources/contribute-unittest.rst:20
# c6cddae7b11841b2b99266567c9536c7
msgid "How it's working"
msgstr ""

#: ../../sources/contribute-unittest.rst:22
# 3e88d1e08e5c493bac71f2dd98c6a2f4
msgid "All the tests are located in `kivy/tests`, and the filename start with `test_<name>.py`. Nose will automatically get all theses files and class inside it, and use it as a test case."
msgstr ""

#: ../../sources/contribute-unittest.rst:26
# c33831d735fd425f9bde568f2370254a
msgid "To write a test, create a file that respect the previous naming, then you can start with that template::"
msgstr ""

#: ../../sources/contribute-unittest.rst:42
# daa77f42bdba491fb3ce6953aa67a3e0
msgid "Replace `XXX` with an appropriate name that cover your tests cases, then replace YYY by the name of your test. If you have some doubt, check how others files are done."
msgstr ""

#: ../../sources/contribute-unittest.rst:46
# e3bd4c85bb5f4d0f946dd1d0d7260233
msgid "Then, to execute them, just run::"
msgstr ""

#: ../../sources/contribute-unittest.rst:50
# 77a48e35a1844425bee877a35b35be67
msgid "If you want to execute that file only, you can run::"
msgstr ""

#: ../../sources/contribute-unittest.rst:56
# 90c200f2b41b47cbadef59cc489e29e9
msgid "GL unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:58
# 1529e2955b404704a2a47061d310fd70
msgid "GL unit test are more difficult. You must know that even if OpenGL is a standard, the output/rendering is not. It depends on your GPU and the driver used. For theses tests, the goal is to save the output of the rendering at frame X, and compare it to a reference image."
msgstr ""

#: ../../sources/contribute-unittest.rst:63
# b61f43664d294d9dad2fb4bb09e05333
msgid "Currently, images are generated in 320x240, png."
msgstr ""

#: ../../sources/contribute-unittest.rst:67
# 34732ca7579d4c9bafc1de939c267c75
msgid "Currently, the image comparaison is done per pixel. That mean the reference image that you will generate will be only correct for your GPU/driver. If somebody can implement a image comparaison with \"delta\" support, patches welcome :)"
msgstr ""

#: ../../sources/contribute-unittest.rst:72
# 731b5434f7e44390a6ded6ac4187ce36
msgid "To execute gl unit test, you need to create a directory::"
msgstr ""

#: ../../sources/contribute-unittest.rst:77
# ed5c0c54c1504597a02db2315abb41bd
msgid "The results directory will contain all the reference images, and the current generated images. At the first execution, if the results directory is empty, no comparaison will be done. It will use the generated images as reference. The second time, all the images will be compared to the reference image."
msgstr ""

#: ../../sources/contribute-unittest.rst:82
# f0467a4388a04b1181da6fcbd2bafc13
msgid "A html file is available to show the comparaison before/after the test, and a snippet of the associated unit test. It will be generated at:"
msgstr ""

#: ../../sources/contribute-unittest.rst:85
# ac6a8c9c86154f88819cb40c76acb659
msgid "kivy/tests/build/index.html"
msgstr ""

#: ../../sources/contribute-unittest.rst:89
# 222ec963f36c4e208046a1d84d13d2d9
msgid "The build directory is cleaned after each call to `make test`. If you don't want that, just use nosetests command."
msgstr ""

#: ../../sources/contribute-unittest.rst:93
# 372037725a22424cb2398ca5aa02628b
msgid "Writing GL Unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:95
# 3df466c27ec04521b50759b963787d7c
msgid "The idea is to create a root widget, as you would do in :meth:`~kivy.app.App.build()`, or for :func:`kivy.base.runTouchApp()`. You'll give that root widget to a rendering function, that will capture the output in X frames."
msgstr ""

#: ../../sources/contribute-unittest.rst:100
# 89921d665a874f02aa82cc41260ac1ef
msgid "Here is an example::"
msgstr ""

#: ../../sources/contribute-unittest.rst:128
# 47c49efa621c4690a5b9b880cc802fc2
msgid "Each call to `self.render` (or `r` in our example) will generate image named like this::"
msgstr ""

#: ../../sources/contribute-unittest.rst:133
# acd2adae545e4e80909c250d3673b558
msgid "`r-call-count` represent the number of time that `self.render` is called inside the test function."
msgstr ""

#: ../../sources/contribute-unittest.rst:136
# c59ce78e143345aba68962f79a585322
msgid "The reference images are named::"
msgstr ""

#: ../../sources/contribute-unittest.rst:140
# 923da6b388df444995172caca4abcb55
msgid "You can replace the reference image with a new one easilly."
msgstr ""

#: ../../sources/contribute-unittest.rst:144
# bc563de8cd5542ef9a1e9203f6402e17
msgid "Coverage reports"
msgstr ""

#: ../../sources/contribute-unittest.rst:146
# 813fdb671f024cd9bf27ebce4768c71a
msgid "Coverage are based on the execution of the previous tests. Statistics on code coverage are automatically grabbed during execution. You can generate an html report of the coverage with the command::"
msgstr ""

#: ../../sources/contribute-unittest.rst:152
# db4441641c2f49f5b4f6161e24c1244f
msgid "Then, open `kivy/htmlcov/index.html` with your favorite web browser."
msgstr ""

