# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-18 09:08\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/contribute-unittest.rst:2
# 2e403ea9750c44c8b61ae57f92a55174
msgid "Unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:4
# 379693e29a1e4224b937a55ebd2950c1
msgid "Unit tests are seperated in two cases:"
msgstr ""

#: ../../sources/contribute-unittest.rst:6
# 967c69a25d774e9dba57a738d63559f6
msgid "Non graphics unit tests: theses are standard unit tests that can run in console"
msgstr ""

#: ../../sources/contribute-unittest.rst:7
# b1f7c2f1197d48cd992681a7d2fc7e69
msgid "Graphics unit tests: theses need a GL context, and work with image comparaison"
msgstr ""

#: ../../sources/contribute-unittest.rst:9
# 66ec7cb518c64274a46bcb7931269a5f
msgid "To be able to run unit test, you need to install nose (http://code.google.com/p/python-nose/), and coverage (http://nedbatchelder.com/code/coverage/). You can use easy_install for that::"
msgstr ""

#: ../../sources/contribute-unittest.rst:15
# 0b6919841c254413aaec359db3b017e2
msgid "Then, in the kivy directory::"
msgstr ""

#: ../../sources/contribute-unittest.rst:20
# f5d87dd6fa12457ca1837bce9e52b0f5
msgid "How it's working"
msgstr ""

#: ../../sources/contribute-unittest.rst:22
# d908497d28504a3589d95a0a157c7cde
msgid "All the tests are located in `kivy/tests`, and the filename start with `test_<name>.py`. Nose will automatically get all theses files and class inside it, and use it as a test case."
msgstr ""

#: ../../sources/contribute-unittest.rst:26
# e179aae9490c4e92ad49c458d9508df1
msgid "To write a test, create a file that respect the previous naming, then you can start with that template::"
msgstr ""

#: ../../sources/contribute-unittest.rst:42
# 7319925fc38e4070986a3f5011e28c09
msgid "Replace `XXX` with an appropriate name that cover your tests cases, then replace YYY by the name of your test. If you have some doubt, check how others files are done."
msgstr ""

#: ../../sources/contribute-unittest.rst:46
# 50536e89dead4aa9a9f2c5c8e00745eb
msgid "Then, to execute them, just run::"
msgstr ""

#: ../../sources/contribute-unittest.rst:50
# 72d0dcdee9dd443295e85e05317586ad
msgid "If you want to execute that file only, you can run::"
msgstr ""

#: ../../sources/contribute-unittest.rst:56
# 57f40623d6364db2afd7164d01e14d1f
msgid "GL unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:58
# 393131fa84c445248f8e7cf423128e80
msgid "GL unit test are more difficult. You must know that even if OpenGL is a standard, the output/rendering is not. It depends on your GPU and the driver used. For theses tests, the goal is to save the output of the rendering at frame X, and compare it to a reference image."
msgstr ""

#: ../../sources/contribute-unittest.rst:63
# 6e27517a6d3a40be8faa9ff45297d295
msgid "Currently, images are generated in 320x240, png."
msgstr ""

#: ../../sources/contribute-unittest.rst:67
# 7f1031e49c1d4e75ace97179e66ff0b6
msgid "Currently, the image comparaison is done per pixel. That mean the reference image that you will generate will be only correct for your GPU/driver. If somebody can implement a image comparaison with \"delta\" support, patches welcome :)"
msgstr ""

#: ../../sources/contribute-unittest.rst:72
# 916e1a83a70e4cc0936ed7555e29c5a1
msgid "To execute gl unit test, you need to create a directory::"
msgstr ""

#: ../../sources/contribute-unittest.rst:77
# 8e1134df5ef6429480e6512703140fa0
msgid "The results directory will contain all the reference images, and the current generated images. At the first execution, if the results directory is empty, no comparaison will be done. It will use the generated images as reference. The second time, all the images will be compared to the reference image."
msgstr ""

#: ../../sources/contribute-unittest.rst:82
# 0dbb2de38b9c4282b7d316c3c3852ddb
msgid "A html file is available to show the comparaison before/after the test, and a snippet of the associated unit test. It will be generated at:"
msgstr ""

#: ../../sources/contribute-unittest.rst:85
# 941c0f2caeb64d09a115157c75159393
msgid "kivy/tests/build/index.html"
msgstr ""

#: ../../sources/contribute-unittest.rst:89
# 7934d65491d1402db162ed84c06aab65
msgid "The build directory is cleaned after each call to `make test`. If you don't want that, just use nosetests command."
msgstr ""

#: ../../sources/contribute-unittest.rst:93
# d48aecd6ae1e47b6ba7cac318d278f38
msgid "Writing GL Unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:95
# 55ff09e272994dca974b3f72a4c9d629
msgid "The idea is to create a root widget, as you would do in :meth:`~kivy.app.App.build()`, or for :func:`kivy.base.runTouchApp()`. You'll give that root widget to a rendering function, that will capture the output in X frames."
msgstr ""

#: ../../sources/contribute-unittest.rst:100
# 62439821432a4eb2b77d380d48e44b41
msgid "Here is an example::"
msgstr ""

#: ../../sources/contribute-unittest.rst:128
# 504b53b404464ad0954ade55f5130ac4
msgid "Each call to `self.render` (or `r` in our example) will generate image named like this::"
msgstr ""

#: ../../sources/contribute-unittest.rst:133
# f69710f30df847bc9e0551648fa6e118
msgid "`r-call-count` represent the number of time that `self.render` is called inside the test function."
msgstr ""

#: ../../sources/contribute-unittest.rst:136
# c1e3cc8bff6c42749ef8bb975d4b643a
msgid "The reference images are named::"
msgstr ""

#: ../../sources/contribute-unittest.rst:140
# f32eaf5bbdc94a40a9befb562620d633
msgid "You can replace the reference image with a new one easilly."
msgstr ""

#: ../../sources/contribute-unittest.rst:144
# 0e7627c1b0b3449ab3501817feb98cf8
msgid "Coverage reports"
msgstr ""

#: ../../sources/contribute-unittest.rst:146
# 29e91b985f264b5fba054016640c895a
msgid "Coverage are based on the execution of the previous tests. Statistics on code coverage are automatically grabbed during execution. You can generate an html report of the coverage with the command::"
msgstr ""

#: ../../sources/contribute-unittest.rst:152
# 7caf31433ba2430485c624559cfd6071
msgid "Then, open `kivy/htmlcov/index.html` with your favorite web browser."
msgstr ""

