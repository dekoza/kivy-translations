# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-14 18:18\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/contribute-unittest.rst:2
# 07537ebba237451595492f8272b5ce87
msgid "Unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:4
# 9ac7e354dcb6484984c5a085d154761b
msgid "Unit tests are seperated in two cases:"
msgstr ""

#: ../../sources/contribute-unittest.rst:6
# 621ab9e245964f218d095ca8d5e6c03c
msgid "Non graphics unit tests: theses are standard unit tests that can run in console"
msgstr ""

#: ../../sources/contribute-unittest.rst:7
# f43830c98e2e4b34994b6a2aa59b447f
msgid "Graphics unit tests: theses need a GL context, and work with image comparaison"
msgstr ""

#: ../../sources/contribute-unittest.rst:9
# b48f61f557eb469bbef9799979aaa18d
msgid "To be able to run unit test, you need to install nose (http://code.google.com/p/python-nose/), and coverage (http://nedbatchelder.com/code/coverage/). You can use easy_install for that::"
msgstr ""

#: ../../sources/contribute-unittest.rst:15
# 605ed1263cce409285021a9fc018d838
msgid "Then, in the kivy directory::"
msgstr ""

#: ../../sources/contribute-unittest.rst:20
# a78c4f738f934a0882c6c59d3b874a20
msgid "How it's working"
msgstr ""

#: ../../sources/contribute-unittest.rst:22
# 8681a587d45b4d92968d8458dc664d0c
msgid "All the tests are located in `kivy/tests`, and the filename start with `test_<name>.py`. Nose will automatically get all theses files and class inside it, and use it as a test case."
msgstr ""

#: ../../sources/contribute-unittest.rst:26
# df548b72d96947b3a250e13fa6f94946
msgid "To write a test, create a file that respect the previous naming, then you can start with that template::"
msgstr ""

#: ../../sources/contribute-unittest.rst:42
# 5c0ca74c1e7c4bdca0e56c0ff9cfdfd5
msgid "Replace `XXX` with an appropriate name that cover your tests cases, then replace YYY by the name of your test. If you have some doubt, check how others files are done."
msgstr ""

#: ../../sources/contribute-unittest.rst:46
# d5c0621baf22430bb2da10c226287580
msgid "Then, to execute them, just run::"
msgstr ""

#: ../../sources/contribute-unittest.rst:50
# 075275e239824b809194fbf662014b6e
msgid "If you want to execute that file only, you can run::"
msgstr ""

#: ../../sources/contribute-unittest.rst:56
# 2f73dce54a88406bade2114e2036d963
msgid "GL unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:58
# bc8d4612692c4d32990699c010951b1b
msgid "GL unit test are more difficult. You must know that even if OpenGL is a standard, the output/rendering is not. It depends on your GPU and the driver used. For theses tests, the goal is to save the output of the rendering at frame X, and compare it to a reference image."
msgstr ""

#: ../../sources/contribute-unittest.rst:63
# 2170bda81d38421faa6aa22901426fed
msgid "Currently, images are generated in 320x240, png."
msgstr ""

#: ../../sources/contribute-unittest.rst:67
# 6b2ae0321b4d40df8bc8d4ddd55d4b81
msgid "Currently, the image comparaison is done per pixel. That mean the reference image that you will generate will be only correct for your GPU/driver. If somebody can implement a image comparaison with \"delta\" support, patches welcome :)"
msgstr ""

#: ../../sources/contribute-unittest.rst:72
# 6e176a7940b74f14953958bdb6a60c54
msgid "To execute gl unit test, you need to create a directory::"
msgstr ""

#: ../../sources/contribute-unittest.rst:77
# 52f2e2c10362400697b14960e2b71f4e
msgid "The results directory will contain all the reference images, and the current generated images. At the first execution, if the results directory is empty, no comparaison will be done. It will use the generated images as reference. The second time, all the images will be compared to the reference image."
msgstr ""

#: ../../sources/contribute-unittest.rst:82
# 0fb02edd514048ce8913c33d993271de
msgid "A html file is available to show the comparaison before/after the test, and a snippet of the associated unit test. It will be generated at:"
msgstr ""

#: ../../sources/contribute-unittest.rst:85
# 7977c50a74b64328a1a8d687bd905742
msgid "kivy/tests/build/index.html"
msgstr ""

#: ../../sources/contribute-unittest.rst:89
# 7397faa76b0b43ccb282de9d924b8e8a
msgid "The build directory is cleaned after each call to `make test`. If you don't want that, just use nosetests command."
msgstr ""

#: ../../sources/contribute-unittest.rst:93
# 01ff7004ccff49428cacce8111256d6e
msgid "Writing GL Unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:95
# 5d229f6bca964294a6246ef5e790899c
msgid "The idea is to create a root widget, as you would do in :meth:`~kivy.app.App.build()`, or for :func:`kivy.base.runTouchApp()`. You'll give that root widget to a rendering function, that will capture the output in X frames."
msgstr ""

#: ../../sources/contribute-unittest.rst:100
# 886981be66a94654bc5d33e0c51b0f7f
msgid "Here is an example::"
msgstr ""

#: ../../sources/contribute-unittest.rst:128
# 0a7caf8ca094499c934363bdc50e973a
msgid "Each call to `self.render` (or `r` in our example) will generate image named like this::"
msgstr ""

#: ../../sources/contribute-unittest.rst:133
# 3b590124f57e4e95b55b3d9d61624c05
msgid "`r-call-count` represent the number of time that `self.render` is called inside the test function."
msgstr ""

#: ../../sources/contribute-unittest.rst:136
# 836c6c2dd4a14ae4b7bf4cd3f44c6bfa
msgid "The reference images are named::"
msgstr ""

#: ../../sources/contribute-unittest.rst:140
# 5463891986ab4a508b64907bb7f6b19e
msgid "You can replace the reference image with a new one easilly."
msgstr ""

#: ../../sources/contribute-unittest.rst:144
# 45734bddb2d044d59267c11a087f5402
msgid "Coverage reports"
msgstr ""

#: ../../sources/contribute-unittest.rst:146
# cb023e6f3eb447a6afa071ef01535259
msgid "Coverage are based on the execution of the previous tests. Statistics on code coverage are automatically grabbed during execution. You can generate an html report of the coverage with the command::"
msgstr ""

#: ../../sources/contribute-unittest.rst:152
# 47cf069739fd4382bb3fc9db69c4bf4c
msgid "Then, open `kivy/htmlcov/index.html` with your favorite web browser."
msgstr ""

