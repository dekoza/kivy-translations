# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-15 00:13\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/contribute-unittest.rst:2
# eb2c00b7c3714d3f9b6fe2a5fa48fb9e
msgid "Unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:4
# b6c07f247f5c4832a7f36ef8439c09de
msgid "Unit tests are seperated in two cases:"
msgstr ""

#: ../../sources/contribute-unittest.rst:6
# cce361e6bd224d4e813d66df50b62c8e
msgid "Non graphics unit tests: theses are standard unit tests that can run in console"
msgstr ""

#: ../../sources/contribute-unittest.rst:7
# dc2275e4f64d4b57958630e1ab6107ba
msgid "Graphics unit tests: theses need a GL context, and work with image comparaison"
msgstr ""

#: ../../sources/contribute-unittest.rst:9
# e38849b65c2c45678c757a5ac504e285
msgid "To be able to run unit test, you need to install nose (http://code.google.com/p/python-nose/), and coverage (http://nedbatchelder.com/code/coverage/). You can use easy_install for that::"
msgstr ""

#: ../../sources/contribute-unittest.rst:15
# ad83f959f4a047bcbbba53cd43bcb310
msgid "Then, in the kivy directory::"
msgstr ""

#: ../../sources/contribute-unittest.rst:20
# 30ff87ec77414edeb106a2a5b7f64d6a
msgid "How it's working"
msgstr ""

#: ../../sources/contribute-unittest.rst:22
# e3944754ea4d4f0881994c0aaff47f76
msgid "All the tests are located in `kivy/tests`, and the filename start with `test_<name>.py`. Nose will automatically get all theses files and class inside it, and use it as a test case."
msgstr ""

#: ../../sources/contribute-unittest.rst:26
# eafbdd0e2f4b490f841eba6d0e9c1618
msgid "To write a test, create a file that respect the previous naming, then you can start with that template::"
msgstr ""

#: ../../sources/contribute-unittest.rst:42
# 5f6daf7fdf2744ef8ab8bf675c2a3f94
msgid "Replace `XXX` with an appropriate name that cover your tests cases, then replace YYY by the name of your test. If you have some doubt, check how others files are done."
msgstr ""

#: ../../sources/contribute-unittest.rst:46
# f76bd6e1dab34240be061589e1c3969f
msgid "Then, to execute them, just run::"
msgstr ""

#: ../../sources/contribute-unittest.rst:50
# a9946e291ddf4253a1fa0888423b2b44
msgid "If you want to execute that file only, you can run::"
msgstr ""

#: ../../sources/contribute-unittest.rst:56
# b691847c25c24f47a200b3f0281eaf29
msgid "GL unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:58
# 4389c4b1a5bd4afe88b8ff2c081b857a
msgid "GL unit test are more difficult. You must know that even if OpenGL is a standard, the output/rendering is not. It depends on your GPU and the driver used. For theses tests, the goal is to save the output of the rendering at frame X, and compare it to a reference image."
msgstr ""

#: ../../sources/contribute-unittest.rst:63
# f2e0974cadbf4adc92b065c4cbb65ed2
msgid "Currently, images are generated in 320x240, png."
msgstr ""

#: ../../sources/contribute-unittest.rst:67
# a70a1bfabf7d4ff49a9373677d99861d
msgid "Currently, the image comparaison is done per pixel. That mean the reference image that you will generate will be only correct for your GPU/driver. If somebody can implement a image comparaison with \"delta\" support, patches welcome :)"
msgstr ""

#: ../../sources/contribute-unittest.rst:72
# e402aae231204391a6fefeb070ce973c
msgid "To execute gl unit test, you need to create a directory::"
msgstr ""

#: ../../sources/contribute-unittest.rst:77
# 4623bfca37e6437bacf1bbd9b324dc4d
msgid "The results directory will contain all the reference images, and the current generated images. At the first execution, if the results directory is empty, no comparaison will be done. It will use the generated images as reference. The second time, all the images will be compared to the reference image."
msgstr ""

#: ../../sources/contribute-unittest.rst:82
# f3c6d38d48214d0ab1feb409329e35e6
msgid "A html file is available to show the comparaison before/after the test, and a snippet of the associated unit test. It will be generated at:"
msgstr ""

#: ../../sources/contribute-unittest.rst:85
# 7a4a1c1e79b54034b507e30b8244569e
msgid "kivy/tests/build/index.html"
msgstr ""

#: ../../sources/contribute-unittest.rst:89
# a75b164d4f3a4291b78455d9e7e895db
msgid "The build directory is cleaned after each call to `make test`. If you don't want that, just use nosetests command."
msgstr ""

#: ../../sources/contribute-unittest.rst:93
# 2a8eb55fccf1498b946b7024730f1a6c
msgid "Writing GL Unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:95
# 7aeb33f544c14a95b253890f114c4177
msgid "The idea is to create a root widget, as you would do in :meth:`~kivy.app.App.build()`, or for :func:`kivy.base.runTouchApp()`. You'll give that root widget to a rendering function, that will capture the output in X frames."
msgstr ""

#: ../../sources/contribute-unittest.rst:100
# 3d424ac37cae4d26b5cb78935f211f82
msgid "Here is an example::"
msgstr ""

#: ../../sources/contribute-unittest.rst:128
# 1497ed80129c42e5b51898b64aa0d233
msgid "Each call to `self.render` (or `r` in our example) will generate image named like this::"
msgstr ""

#: ../../sources/contribute-unittest.rst:133
# 8f5786f33aa7422cbe0fe819792d199f
msgid "`r-call-count` represent the number of time that `self.render` is called inside the test function."
msgstr ""

#: ../../sources/contribute-unittest.rst:136
# 63a623853b66449a85aa8ec300ad5d18
msgid "The reference images are named::"
msgstr ""

#: ../../sources/contribute-unittest.rst:140
# fe65b1e73ddd45ac93aa71f23a5149d0
msgid "You can replace the reference image with a new one easilly."
msgstr ""

#: ../../sources/contribute-unittest.rst:144
# 16adbb1e7bbb4207bcdf3c6f41ce2589
msgid "Coverage reports"
msgstr ""

#: ../../sources/contribute-unittest.rst:146
# 1450117bdd4146139bd1a9d835d6ae08
msgid "Coverage are based on the execution of the previous tests. Statistics on code coverage are automatically grabbed during execution. You can generate an html report of the coverage with the command::"
msgstr ""

#: ../../sources/contribute-unittest.rst:152
# d1a365dc5a69464b9ba2b03f68bcd894
msgid "Then, open `kivy/htmlcov/index.html` with your favorite web browser."
msgstr ""

