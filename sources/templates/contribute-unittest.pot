# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-24 10:21\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/contribute-unittest.rst:2
# ed68de39a1834d96a8cfbe9ae12c3a50
msgid "Unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:4
# 478c2af701cc408e9165d3f327b14485
msgid "Unit tests are seperated in two cases:"
msgstr ""

#: ../../sources/contribute-unittest.rst:6
# 5e6b79d3707a4f50a447b05f353dddfa
msgid "Non graphics unit tests: theses are standard unit tests that can run in console"
msgstr ""

#: ../../sources/contribute-unittest.rst:7
# 756318e773d3441a995fd6ae022a7ad5
msgid "Graphics unit tests: theses need a GL context, and work with image comparaison"
msgstr ""

#: ../../sources/contribute-unittest.rst:9
# 16909f32a1b14e37bc83330731ab97e5
msgid "To be able to run unit test, you need to install nose (http://code.google.com/p/python-nose/), and coverage (http://nedbatchelder.com/code/coverage/). You can use easy_install for that::"
msgstr ""

#: ../../sources/contribute-unittest.rst:15
# aeabe918fb3449af885a06b54bd3a5b0
msgid "Then, in the kivy directory::"
msgstr ""

#: ../../sources/contribute-unittest.rst:20
# 1882bfa140d849099f25b720549a90d3
msgid "How it's working"
msgstr ""

#: ../../sources/contribute-unittest.rst:22
# f11fb3433008488c8cd8bf9674fbccb8
msgid "All the tests are located in `kivy/tests`, and the filename start with `test_<name>.py`. Nose will automatically get all theses files and class inside it, and use it as a test case."
msgstr ""

#: ../../sources/contribute-unittest.rst:26
# 9fee0452eb1d414d8b622e93d304ede2
msgid "To write a test, create a file that respect the previous naming, then you can start with that template::"
msgstr ""

#: ../../sources/contribute-unittest.rst:42
# f0eb5d0b2ee24fa0866e94d698ce8172
msgid "Replace `XXX` with an appropriate name that cover your tests cases, then replace YYY by the name of your test. If you have some doubt, check how others files are done."
msgstr ""

#: ../../sources/contribute-unittest.rst:46
# acfb1531e66d40bd86e18faddfb56046
msgid "Then, to execute them, just run::"
msgstr ""

#: ../../sources/contribute-unittest.rst:50
# 9d598d93db114bd38d7203fb4720432e
msgid "If you want to execute that file only, you can run::"
msgstr ""

#: ../../sources/contribute-unittest.rst:56
# 6231f24938f345ce8a272b9ba36185fe
msgid "GL unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:58
# 1c7d92cb3f4244ecb93a92f95c3fe596
msgid "GL unit test are more difficult. You must know that even if OpenGL is a standard, the output/rendering is not. It depends on your GPU and the driver used. For theses tests, the goal is to save the output of the rendering at frame X, and compare it to a reference image."
msgstr ""

#: ../../sources/contribute-unittest.rst:63
# 9362d8a234db4b1b992745bb6127a38a
msgid "Currently, images are generated in 320x240, png."
msgstr ""

#: ../../sources/contribute-unittest.rst:67
# 2ffbbf55e064405f84607950ac752d80
msgid "Currently, the image comparaison is done per pixel. That mean the reference image that you will generate will be only correct for your GPU/driver. If somebody can implement a image comparaison with \"delta\" support, patches welcome :)"
msgstr ""

#: ../../sources/contribute-unittest.rst:72
# 89e645cec3644fedb7b77f8b3542019b
msgid "To execute gl unit test, you need to create a directory::"
msgstr ""

#: ../../sources/contribute-unittest.rst:77
# 040770dd74854c28a7478875dbc2ffdb
msgid "The results directory will contain all the reference images, and the current generated images. At the first execution, if the results directory is empty, no comparaison will be done. It will use the generated images as reference. The second time, all the images will be compared to the reference image."
msgstr ""

#: ../../sources/contribute-unittest.rst:82
# 03f6f1be72a8482382a875f6cede14e9
msgid "A html file is available to show the comparaison before/after the test, and a snippet of the associated unit test. It will be generated at:"
msgstr ""

#: ../../sources/contribute-unittest.rst:85
# bd2e62f7bd2e4fc79cca33b1fa3d7ec2
msgid "kivy/tests/build/index.html"
msgstr ""

#: ../../sources/contribute-unittest.rst:89
# 1d338ca13a204ab7a9b8958c0fcc5ac9
msgid "The build directory is cleaned after each call to `make test`. If you don't want that, just use nosetests command."
msgstr ""

#: ../../sources/contribute-unittest.rst:93
# c12ca0c7508948318019303676b24497
msgid "Writing GL Unit tests"
msgstr ""

#: ../../sources/contribute-unittest.rst:95
# b6a28670581d4edcb472edab2c2f323a
msgid "The idea is to create a root widget, as you would do in :meth:`~kivy.app.App.build()`, or for :func:`kivy.base.runTouchApp()`. You'll give that root widget to a rendering function, that will capture the output in X frames."
msgstr ""

#: ../../sources/contribute-unittest.rst:100
# 2fc0e40242c24375ada860dc90459e0f
msgid "Here is an example::"
msgstr ""

#: ../../sources/contribute-unittest.rst:128
# bf06d5319b9b491fbfe07f1c96f77b8b
msgid "Each call to `self.render` (or `r` in our example) will generate image named like this::"
msgstr ""

#: ../../sources/contribute-unittest.rst:133
# dd368a3c958d4aa1836c64d777842ed6
msgid "`r-call-count` represent the number of time that `self.render` is called inside the test function."
msgstr ""

#: ../../sources/contribute-unittest.rst:136
# 25a24f7573c04dc8af701ffccaa70928
msgid "The reference images are named::"
msgstr ""

#: ../../sources/contribute-unittest.rst:140
# 910a589a28094e30867079308b5fa197
msgid "You can replace the reference image with a new one easilly."
msgstr ""

#: ../../sources/contribute-unittest.rst:144
# 05ed64d5d5854de7804dd43f1d658089
msgid "Coverage reports"
msgstr ""

#: ../../sources/contribute-unittest.rst:146
# d2fd24d7d6aa4992975d78ba39f3e952
msgid "Coverage are based on the execution of the previous tests. Statistics on code coverage are automatically grabbed during execution. You can generate an html report of the coverage with the command::"
msgstr ""

#: ../../sources/contribute-unittest.rst:152
# eaad0a049e7540e3929f035743a4fe26
msgid "Then, open `kivy/htmlcov/index.html` with your favorite web browser."
msgstr ""

