# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-24 10:07\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.properties.rst:3
# ef50da6fa7074e55aa151f1c2ac8f982
msgid "Properties"
msgstr ""

#: ../../docstring of kivy.properties:2
# 77e5858be34a46c4ba9481ef33347c30
msgid "The *Properties* classes are used when you create a :class:`~kivy.uix.widget.Widget`."
msgstr ""

#: ../../docstring of kivy.properties:6
# faf6a0ef52374bd98984e239ef53b4a8
msgid "Kivy's Properties are **not to be confused** with Python's properties (i.e. the ``@property`` decorator and the <property> type)."
msgstr ""

#: ../../docstring of kivy.properties:9
# c79adeaa7af244cb84498251990bb96d
msgid "Kivy's property classes support:"
msgstr ""

#: ../../docstring of kivy.properties:12
# e53e9ffb371141f19dbf8c9f59132542
msgid "When you assign a new value to a property, the value is checked to pass some constraints implemented in the class. I.e., validation is performed. For example, an :class:`OptionProperty` will make sure that the value is in a predefined list of possibilities. A :class:`NumericProperty` will check that your value is a numeric type, i.e. int, float, etc. This prevents many errors early on."
msgstr ""

#: ../../docstring of kivy.properties:21
# 31f8e4bb8c6f4fe6a1a66885a86d596c
msgid "You can specify what should happen when a property's value changes. You can bind your own function as a callback to changes of a :class:`Property`. If, for example, you want a piece of code to be called when a widget's :class:`~kivy.uix.widget.Widget.pos` property changes, you can :class:`~kivy.uix.widget.Widget.bind` a function to it."
msgstr ""

#: ../../docstring of kivy.properties:28
# 3e0219dc73dc41a7a48f6954e7c00004
msgid "The same instance of a property is shared across multiple widget instances."
msgstr ""

#: ../../<autodoc>:1
# e03366c7078e41acaff2dbb6135d60a8
msgid "Bases: :class:`object`"
msgstr ""

#: ../../docstring of kivy.properties.Property:1
# f01fc8257ee04cec8f5826bdb710afcf
msgid "Base class for building more complex properties."
msgstr ""

#: ../../docstring of kivy.properties.Property:3
# e25637c2052e474f95596b652d77a5e8
msgid "This class handles all the basic setters and getters, None type handling, the observer list and storage initialisation. This class should not be directly instantiated."
msgstr ""

#: ../../docstring of kivy.properties.Property:7
# 2e0340bd890b448d855261c5d8f57ab7
msgid "By default, a :class:`Property` always take a default value::"
msgstr ""

#: ../../docstring of kivy.properties.Property:13
# f4639f4f28a54015826f559a5036676b
msgid "The default value must be a value that agreed about the Property type. For example, you can't set a list to a :class:`StringProperty`, because the StringProperty will check the default value."
msgstr ""

#: ../../docstring of kivy.properties.Property:17
# 77ee603b6c68455d9921466a8a27cbeb
msgid "None is a special case: you can set the default value of a Property to None, but you can't set None to a property afterwise. If you really want to do that, you must declare the Property with `allownone=True`::"
msgstr ""

#: ../../docstring of kivy.properties.Property.bind:1
# 125e18b6167641aab66f9b19eb664c84
msgid "Add a new observer to be called only when the value is changed"
msgstr ""

#: ../../docstring of kivy.properties.Property.get:1
# 701e4286bf7547229a060d8f3340c39c
msgid "Return the value of the property"
msgstr ""

#: ../../docstring of kivy.properties.Property.link:1
# 1819770f439a4d2ea593eeef834adc02
msgid "Link the instance with its real name."
msgstr ""

#: ../../docstring of kivy.properties.Property.link:5
# fde9eac6e92a496bab3a2c30535b6480
msgid "Internal usage only."
msgstr ""

#: ../../docstring of kivy.properties.Property.link:7
# bd1665371ab141aa99cbc6c695a3baeb
msgid "When a widget is defined and uses a :class:`Property` class, the creation of the property object happens, but the instance doesn't know anything about its name in the widget class::"
msgstr ""

#: ../../docstring of kivy.properties.Property.link:14
# 83b798b7e8d847d88c3e2771274272c1
msgid "In this example, the uid will be a NumericProperty() instance, but the property instance doesn't know its name. That's why :func:`link` is used in Widget.__new__. The link function is also used to create the storage space of the property for this specific widget instance."
msgstr ""

#: ../../docstring of kivy.properties.Property.set:1
# 44637b4a16164c318e7d5da54802e6db
msgid "Set a new value for the property"
msgstr ""

#: ../../docstring of kivy.properties.Property.unbind:1
# 81ed9d0d127742db9a2264c586c4d457
msgid "Remove the observer from our widget observer list"
msgstr ""

#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
#: ../../<autodoc>:1
# f93769733f9040f9af0d67d26a5499bd
# b77471bc9c9846c68413cb85e5c36026
# 54707208a47e4d2eb10becc7725bb312
# 65beb1392ef24d409fde3ee1d6c75096
# 91085f7b150a41488f011b7e6323d111
# a5bf9aa9603c44d9ad16df23b48a8faf
# 7c97e89d4ff14e28a8649563ac36dcf7
# 05dd5d9473e44a0782b2af484bde229a
# 720f32d11e434ef7ab836982011d0a89
# 24f3eef44f714faf8fb8b7dd7cc8a0f3
msgid "Bases: :class:`kivy.properties.Property`"
msgstr ""

#: ../../docstring of kivy.properties.NumericProperty:1
# 9822d7aa842147d2880da3e9159816d5
msgid "Property that represents a numeric value"
msgstr ""

#: ../../docstring of kivy.properties.NumericProperty:3
# 067519b211454fde867a06ccb61e889a
msgid "The NumericProperty accepts only int or float."
msgstr ""

#: ../../docstring of kivy.properties.StringProperty:1
# f9e77660dd884e2ca4afa525a5c4ac67
msgid "Property that represents a string value."
msgstr ""

#: ../../docstring of kivy.properties.StringProperty:3
# 4c783f46f3264571afce264dd1eea280
msgid "Only string or unicode are accepted."
msgstr ""

#: ../../docstring of kivy.properties.ListProperty:1
# ad1adaba8d144c238c19d8809feb0696
msgid "Property that represents a list."
msgstr ""

#: ../../docstring of kivy.properties.ListProperty:3
# 572717d8335f4adb879e40539e760cbf
msgid "Only lists are allowed, tuple or any other classes are forbidden."
msgstr ""

#: ../../docstring of kivy.properties.ObjectProperty:1
# c39a0bc473e642e8aac1eb78955e5f42
msgid "Property that represents a Python object."
msgstr ""

#: ../../docstring of kivy.properties.ObjectProperty:5
# 4b0fd1c27d6e4554b3df4f6dc5d0bec9
msgid "To mark the property as changed, you must reassign a new python object."
msgstr ""

#: ../../docstring of kivy.properties.BooleanProperty:1
# 6be33c5eb0df4da7861ed29fb728bda7
msgid "Property that represents only boolean"
msgstr ""

#: ../../docstring of kivy.properties.BoundedNumericProperty:1
# 5d0788b4865243bd94b8f9802861f24b
msgid "Property that represents a numeric value within a minimum bound and/or maximum bound (i.e. a numeric range)."
msgstr ""

#: ../../docstring of kivy.properties.BoundedNumericProperty:6
# 8daa486516094424bf00be9bddc5780e
msgid "If set, minimum bound will be used, with the value of min"
msgstr ""

#: ../../docstring of kivy.properties.BoundedNumericProperty:8
# e77b1e5ea1974e748ba5dfb391d2a612
msgid "If set, maximum bound will be used, with the value of max"
msgstr ""

#: ../../docstring of kivy.properties.OptionProperty:1
# f46085c248494920abc9a7ca726089fc
msgid "Property that represents a string from a predefined list of valid options."
msgstr ""

#: ../../docstring of kivy.properties.OptionProperty:4
# 0e4c6ff8051b4fd9afa9147e7861ea15
msgid "If the string set in the property is not in the list of valid options (passed at property creation time), a ValueError exception will be raised."
msgstr ""

#: ../../docstring of kivy.properties.OptionProperty:9
# 2e086c47528946e5ae26e716f6cdb861
msgid "List of valid options"
msgstr ""

#: ../../docstring of kivy.properties.ReferenceListProperty:1
# 3b9455a3338d4f9b9706e49ab75fce0b
msgid "Property that allows to create a tuple of other properties."
msgstr ""

#: ../../docstring of kivy.properties.ReferenceListProperty:3
# 4d7284d125ca44bcb5182cc1c488c146
msgid "For example, if `x` and `y` are :class:`NumericProperty`s, we can create a :class:`ReferenceListProperty` for the `pos`. If you change the value of `pos`, it will automatically change the values of `x` and `y` accordingly. If you read the value of `pos`, it will return a tuple with the values of `x` and `y`."
msgstr ""

#: ../../docstring of kivy.properties.AliasProperty:1
# 919841e243c54cedad6dd229d4ef86cb
msgid "Create a property with a custom getter and setter."
msgstr ""

#: ../../docstring of kivy.properties.AliasProperty:3
# 8a91313228e1435cb24f5c99e83b3f62
msgid "If you didn't find a Property class that fits to your needs, you can still create Python getters and setters and create a property with both of them."
msgstr ""

#: ../../docstring of kivy.properties.AliasProperty:6
# 98107b52ec7d4c9ab18f1c82895ab7fe
msgid "Example from kivy/uix/widget.py ::"
msgstr ""

#: ../../docstring of kivy.properties.AliasProperty:16
# d04c53c2640048e1a54cc800fc3913bd
msgid "Function to use as a property getter"
msgstr ""

#: ../../docstring of kivy.properties.AliasProperty:18
# 24cb23d0fc3b4a468f0a2020fecce4a9
msgid "Function to use as a property setter"
msgstr ""

#: ../../docstring of kivy.properties.AliasProperty:20
# 63862cc98ea6455c9a6328a9e7bf9d4e
msgid "List of properties to observe for changes"
msgstr ""

#: ../../docstring of kivy.properties.DictProperty:1
# 4876c2d247a34f7ca3f6d797450f3bd5
msgid "Property that represents a dict."
msgstr ""

#: ../../docstring of kivy.properties.DictProperty:3
# ca58ee9ac731491ba4125adbbbae1b04
msgid "Only dict are allowed, any other classes are forbidden."
msgstr ""

