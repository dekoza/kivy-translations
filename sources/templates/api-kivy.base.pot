# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-08 21:25\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.base.rst:3
# 132dba5f4b314f4da7ff593f659a63e6
msgid "Event loop management"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoop:1
# 709844303ddb4629ad94787d63bbbc34
msgid "EventLoop instance"
msgstr ""

#: ../../<autodoc>:1
# acfdf4cbb5094338ae7f4e1fbdca7bc9
msgid "Bases: :class:`kivy.event.EventDispatcher`"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase:1
# 527394a37b1f4916b268c9e9b489c7d7
msgid "Main event loop. This loop handle update of input + dispatch event"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.add_event_listener:1
# 343313856b1c4ff8902aa5432f09aa2e
msgid "Add a new event listener for getting touch event"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.add_input_provider:1
# 985ec32af3f4473282d44be57f682057
msgid "Add a new input provider to listen for touch event"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.add_postproc_module:1
# c0bf828293da468f859b635bb1212e9c
msgid "Add a postproc input module (DoubleTap, RetainTouch are default)"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.close:1
# 5bc2841cf8b349ff99c094ba79c8aefd
msgid "Exit from the main loop, and stop all configured input providers."
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.dispatch_input:1
# 0a452f4b35414925ae67546eeec3378b
msgid "Called by idle() to read events from input providers, pass event to postproc, and dispatch final events."
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.ensure_window:1
# 723990c190224e2da8b58f12ab47285f
msgid "Ensure that we have an window"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.exit:1
# 994b2c434a88493dae0a7349aba2dc18
msgid "Close the main loop, and close the window"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.idle:1
# 9dd2f6d36f3e4a67baed905e3d998b72
msgid "This function is called every frames. By default : * it \"tick\" the clock to the next frame * read all input and dispatch event * dispatch on_update + on_draw + on_flip on window"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.on_pause:1
# 28e70c9773e14b2a9d36050ae4420558
msgid "Event handler for on_pause, will be fired when the event loop is paused."
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.on_start:1
# 619e7fcfbde54308babeb85d7ef0fd60
msgid "Event handler for on_start, will be fired right after all input providers have been started."
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.on_stop:1
# a522d68e8ac5469f82b12179f54bcfd7
msgid "Event handler for on_stop, will be fired right after all input providers have been stopped."
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.post_dispatch_input:1
# ea0ba6bed29145a6ab8dd29f692d6eaf
msgid "This function is called by dispatch_input() when we want to dispatch a input event. The event is dispatched into all listeners, and if grabbed, it's dispatched through grabbed widgets"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.remove_event_listener:1
# 379ca50005944d0d81937677eb10dcd3
msgid "Remove a event listener from the list"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.remove_input_provider:1
# f1222a5fdecb46819b2dd48d79e1f5cb
msgid "Remove an input provider"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.remove_postproc_module:1
# 11483ecae1d7404e91154731fcb2791c
msgid "Remove a postproc module"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.run:1
# 429bbd63a7f5490887006d3683317393
msgid "Main loop"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.set_window:1
# 0887cca660174265813874e6becab68f
msgid "Set the window used for event loop"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.start:1
# 3e87febe32974b289b4c785cc0328a2d
msgid "Must be call only one time before run(). This start all configured input providers."
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.stop:1
# 406efeed9e524b1b8a5e1b48dbd9e1ba
msgid "Stop all input providers and call callbacks registered using EventLoop.add_stop_callback()"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.EventLoopBase.touches:1
# 6b0a1a3598fc4407abd5c4ad08d3289c
msgid "Return the list of all touches currently in down or move state"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.ExceptionManager:1
# b9382a195c9142e589132142c3aec712
msgid "Kivy Exception Manager instance"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.ExceptionHandler:1
# 4a7dd0128d56433181d4b9a7d9b0fdf1
msgid "Base handler that catch exception in runTouchApp(). You can derivate and use it like this ::"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.ExceptionHandler:11
# c4954d88c23a486787aead61a77abfc1
msgid "All exceptions will be set to PASS, and logged to console !"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.ExceptionHandler.handle_exception:1
# cf2972365cda42d995bf52bee4fe888b
msgid "Handle one exception, default return ExceptionManager.STOP"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.runTouchApp:1
# b01dd3bbb9144de9abbcf6202944f149
msgid "Static main function that starts the application loop. You got some magic things, if you are using argument like this :"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.runTouchApp:6
# 86e55f3ab23a4d24acac002e3d79af3c
msgid "To make dispatching work, you need at least one input listener. If not, application will leave. (MTWindow act as an input listener)"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.runTouchApp:11
# 63f236279b104e17b727941452ca61ad
msgid "If you pass only a widget, a MTWindow will be created, and your widget will be added on the window as the root widget."
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.runTouchApp:16
# f29d780e3a894f2cb5c26de6fcb1679e
msgid "No event dispatching are done. This will be your job."
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.runTouchApp:19
# 697a27b65e264db1ad2d1977fdeafae8
msgid "No event dispatching are done. This will be your job, but we are trying to get the window (must be created by you before), and add the widget on it. Very usefull for embedding Kivy in another toolkit. (like Qt, check kivy-designed)"
msgstr ""

#: ../../../kivy/base.py:docstring of kivy.base.stopTouchApp:1
# 2fac5715e3b44211957a5f85ac211843
msgid "Stop the current application by leaving the main loop"
msgstr ""

