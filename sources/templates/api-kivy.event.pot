# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-19 15:09\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.event.rst:3
# 4da030925a734e53a43db025bac4b8c3
msgid "Event dispatcher"
msgstr ""

#: ../../docstring of kivy.event:2
# 73099212ce324581b66e0d108fb1ccd4
msgid "All objects that produce events in Kivy implement :class:`EventDispatcher`, providing a consistent interface for registering and manipulating event handlers."
msgstr ""

#: ../../<autodoc>:1
# 2264ebcaf36b48fea42a9b476983b16a
msgid "Bases: :class:`object`"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher:1
# 5e058ea669664104af9787d7a42031fe
msgid "Generic event dispatcher interface"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher:3
# 9fd53c7a16fc4abf8c9bc478c672e13f
msgid "See the module docstring for usage."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.bind:1
# 83eadfbb3488477e816912b0221f2598
msgid "Bind an event type or a property to a callback"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.bind:3
# 36df0d84fcbe4d279fb16d384c8ea280
msgid "Usage::"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.dispatch:1
# b39aab7c46894f31ad8513ada2e0fdd6
msgid "Dispatch an event across all the handler added in bind(). As soon as a handler return True, the dispatching stop"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.is_event_type:1
# 1c621e62083347e38872267b852007a9
msgid "Return True if the event_type is already registered."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:1
# a6b821f67b8a4067a33e27b48a17cbb2
msgid "Register an event type with the dispatcher."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:3
# 596d271a11aa4d7886f08e25c6681322
msgid "Registering event types allows the dispatcher to validate event handler names as they are attached, and to search attached objects for suitable handlers. Each event type declaration must :"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:7
# 9cb491b2b7b04b1c9be17996bcd5fedc
msgid "start with the prefix `on_`"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:8
# 402d06d2ec764c2e816d8abceba6ecaa
msgid "have a default handler in the class"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:10
# 1ec9af1ab40b4b3a9902556cdf293d9b
msgid "Example of creating custom event::"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.unbind:1
# fd329f0fbcc847819de2b2e2de0e7fd0
msgid "Unbind properties from callback functions."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.unbind:3
# 9da7ca5070974fbdb038e676b1cb24d4
msgid "Same usage as bind()."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.unregister_event_types:1
# 414b400c2ba641828597af35a3ec62c3
msgid "Unregister an event type in the dispatcher"
msgstr ""

