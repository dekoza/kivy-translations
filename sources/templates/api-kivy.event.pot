# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-17 22:29\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.event.rst:3
# 1d1a844e0c6e411d9839dffb4c866127
msgid "Event dispatcher"
msgstr ""

#: ../../docstring of kivy.event:2
# 3666dd09c9234362ad68bd50098c263d
msgid "All objects that produce events in Kivy implement :class:`EventDispatcher`, providing a consistent interface for registering and manipulating event handlers."
msgstr ""

#: ../../<autodoc>:1
# 97faf57d0af940928081153b81682701
msgid "Bases: :class:`object`"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher:1
# 1ca75b1c95ae4ebeb5a5a50e46b07d82
msgid "Generic event dispatcher interface"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher:3
# aca2061b8df847468afd7db7aec31e12
msgid "See the module docstring for usage."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.bind:1
# 0b441f3d006947c6b429153236a4aefe
msgid "Bind an event type or a property to a callback"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.bind:3
# 7fe09c04e79742d1bbafa56bf8a9e4ab
msgid "Usage::"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.dispatch:1
# 27968777a4b5445089f410dadd3d3cca
msgid "Dispatch an event across all the handler added in bind(). As soon as a handler return True, the dispatching stop"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.is_event_type:1
# b5b760c1d91b47a6aaf1aeefbfb4c550
msgid "Return True if the event_type is already registered."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:1
# 8c060f7d704e47e59d65840eb32e7583
msgid "Register an event type with the dispatcher."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:3
# c0864c0e2aa94b76bd232ea2a1553181
msgid "Registering event types allows the dispatcher to validate event handler names as they are attached, and to search attached objects for suitable handlers. Each event type declaration must :"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:7
# 2ca021d9f35043fbb722f8c168989661
msgid "start with the prefix `on_`"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:8
# 3377649f6a87474db33a2190154a3591
msgid "have a default handler in the class"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:10
# d5bed68debf748c7a86cf3fd55d9f2b7
msgid "Example of creating custom event::"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.unbind:1
# 234a31d3ec8749088a938b145dcbdfff
msgid "Unbind properties from callback functions."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.unbind:3
# 521378e48d00416c90b0e13c89360ad2
msgid "Same usage as bind()."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.unregister_event_types:1
# 34d8332f45d54da9a0e9f0d284831be3
msgid "Unregister an event type in the dispatcher"
msgstr ""

