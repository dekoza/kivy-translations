# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-24 01:39\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.event.rst:3
# 8ee40d23e7c6432a8f1a939107a0c1fc
msgid "Event dispatcher"
msgstr ""

#: ../../docstring of kivy.event:2
# cfce051cf5654a39a5193f3b1e93078e
msgid "All objects that produce events in Kivy implement :class:`EventDispatcher`, providing a consistent interface for registering and manipulating event handlers."
msgstr ""

#: ../../<autodoc>:1
# 089ceb59895047a9ab3fdb376d61105c
msgid "Bases: :class:`object`"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher:1
# 5ec9c8786f6247bfabb184ed56597454
msgid "Generic event dispatcher interface"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher:3
# 25f438bfc707423ca1c9566204d715c3
msgid "See the module docstring for usage."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.bind:1
# 6a0d1cb76614472ab286ef25dc956acf
msgid "Bind an event type or a property to a callback"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.bind:3
# 41574ff4d6944221956a77aab360e190
msgid "Usage::"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.dispatch:1
# e9e6f17cdb7e4e8db36953cc26685334
msgid "Dispatch an event across all the handler added in bind(). As soon as a handler return True, the dispatching stop"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.is_event_type:1
# f73f8dab0e1641b99e4809e9777f2364
msgid "Return True if the event_type is already registered."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:1
# d4658ea763644e36aae2c02701c35aa1
msgid "Register an event type with the dispatcher."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:3
# d1d6e08689ec42dd90003f44bed7d906
msgid "Registering event types allows the dispatcher to validate event handler names as they are attached, and to search attached objects for suitable handlers. Each event type declaration must :"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:7
# 257585a1430248d7bd8228fb6a1abc29
msgid "start with the prefix `on_`"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:8
# 6d8c76250494402db8e711952b0ae749
msgid "have a default handler in the class"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:10
# d0f01687a7484d4c95194417c10277d2
msgid "Example of creating custom event::"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.unbind:1
# 26b7c961436147d38693ec8104881b42
msgid "Unbind properties from callback functions."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.unbind:3
# cbd109271cfe473eacdd7eff804fc0b3
msgid "Same usage as bind()."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.unregister_event_types:1
# 8155fb51485548da88a130d15a91821f
msgid "Unregister an event type in the dispatcher"
msgstr ""

