# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-24 10:07\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.event.rst:3
# 976416e83d054053b910eba947614257
msgid "Event dispatcher"
msgstr ""

#: ../../docstring of kivy.event:2
# 8ea230e7c5cd4ed18cedc7c31207a5e7
msgid "All objects that produce events in Kivy implement :class:`EventDispatcher`, providing a consistent interface for registering and manipulating event handlers."
msgstr ""

#: ../../<autodoc>:1
# a752e71ec58f478f9647959bb9098778
msgid "Bases: :class:`object`"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher:1
# 0c785544e06c4f93b8ed55250439a538
msgid "Generic event dispatcher interface"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher:3
# add63c956d5a40a2b938e1c00f06a75e
msgid "See the module docstring for usage."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.bind:1
# abbece9168e142b39201ffe52fc942f7
msgid "Bind an event type or a property to a callback"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.bind:3
# 290cafc7751b4e14b090578bb2c88fc2
msgid "Usage::"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.dispatch:1
# 110a84776dbc4e9db9d220dba49561f2
msgid "Dispatch an event across all the handler added in bind(). As soon as a handler return True, the dispatching stop"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.is_event_type:1
# 9dfe88261657442384584606cf31e4b9
msgid "Return True if the event_type is already registered."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:1
# a1e130a0bca74fe093bc1083c52b0b2b
msgid "Register an event type with the dispatcher."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:3
# 7e671f91dcec49848b5b75562cf2b273
msgid "Registering event types allows the dispatcher to validate event handler names as they are attached, and to search attached objects for suitable handlers. Each event type declaration must :"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:7
# ab06a865a18548358d1a661704470328
msgid "start with the prefix `on_`"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:8
# 6a1078829cd24a858380d1a27e49393e
msgid "have a default handler in the class"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.register_event_type:10
# 54893d37de9c413a83c12515e37106b7
msgid "Example of creating custom event::"
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.unbind:1
# f7134ebc057848cc97674c9abf649efb
msgid "Unbind properties from callback functions."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.unbind:3
# cf08605da6c846c18750b35de7af057b
msgid "Same usage as bind()."
msgstr ""

#: ../../docstring of kivy.event.EventDispatcher.unregister_event_types:1
# 09879f12c45f4ab887e3e53d52084eb6
msgid "Unregister an event type in the dispatcher"
msgstr ""

