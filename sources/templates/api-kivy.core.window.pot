# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-14 16:22\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.core.window.rst:3
# a791c28bc804402a8f6a5161451f5749
msgid "Window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window:2
# e8626fd3eb7a4bb6ac3b580e0b99a9af
msgid "Core class for create the default Kivy window. Kivy support only one window creation. Don't try to create more than one."
msgstr ""

#: ../../<autodoc>:1
# 7c70c5ea87d54656be5e46beca8015e2
msgid "Bases: :class:`kivy.event.EventDispatcher`"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:1
# 8e9ce003669e47d6b0a1aa2f1e15d56c
msgid "WindowBase is a abstract window widget, for any window implementation."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:5
# ac29c7c69a3f4870a03cdc88529c8895
msgid "Make window as fullscreen, check config documentation for more explaination about the values."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:8
# debb05fc5637473bbd49f59006ba01e0
msgid "Width of window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:10
# 659e9adcfe32417793993cecc237f956
msgid "Height of window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:14
# af422c7a238b4717a8de26474043cb48
msgid "Fired when a new :class:`~kivy.input.motionevent.MotionEvent` is dispatched"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:17
# 2614f59342e7424d87108cda82dfedcd
msgid "Fired when a new touch appear"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:19
# 2cb2728c8a7e4690a59375517c4355b7
msgid "Fired when an existing touch is moved"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:21
# 520a9a6a5b334775b37467396869dfa8
msgid "Fired when an existing touch disapear"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:23
# c63b8bf21dc1439b9e0b0d0523a12532
msgid "Fired when the :class:`Window` is beeing drawed"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:25
# d1300831b657401ebc1116a515038ebb
msgid "Fired when the :class:`Window` GL surface is beeing flipped"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:27
# 709711baccc8495692a096fc8cfc3d53
msgid "Fired when the :class:`Window` is beeing rotated"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:29
# 9c172839ae8041f1adf327416aa7d383
msgid "Fired when the :class:`Window` is closed"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:31
# 8fd4f83580194902a2ef5e82906dc5ae
msgid "Fired when the keyboard is in action"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:33
# 5695994c4fc14b58af920dcc813d9ca2
msgid "Fired when a key is down"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:35
# 65daa2da7aa14e879567ee8340021670
msgid "Fired when a key is up"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.add_widget:1
# 64b27b3ca71b47899cac5e2768d6bb07
msgid "Add a widget on window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.center:1
# d9a76dc3cc8a47869576ce5bd4525c05
msgid "Rotated window center"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.clear:1
# 67ff1125db184da7ba735f8d723b25fc
msgid "Clear the window with background color"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.clearcolor:1
# a5344a0327ed47d6bee39adacaf71bb9
msgid "Color used to clear window::"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.close:1
# 7f26d223f5724fddb14a8651a4276923
msgid "Close the window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:1
# e55354244e2a4684964bdf11d61057f6
msgid "Will create the main window and configure it."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:4
# ea9bc58021f648f7838d1856ae6ca553
msgid "This method is called automatically at runtime. If you call it, it will recreate a RenderContext and Canvas. This mean you'll have a new graphics tree, and the old one will be unusable."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:8
# 4c52b5c772004146b7b329ac5be2e05c
msgid "This method exist to permit the creation of a new OpenGL context AFTER closing the first one. (Like using runTouchApp() and stopTouchApp())."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:12
# ab1bf635dac74fbf93270b3fcded6b1f
msgid "This method have been only tested in unittest environment, and will be not suitable for Applications."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:15
# 6ba91c3d9fe147ae9391fad81f4220ed
msgid "Again, don't use this method unless you know exactly what you are doing !"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.flip:1
# a26518a9eaea4c218bd7210573ea75ed
msgid "Flip between buffers"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.height:1
# 3f0c28082e7945599ab0c6b933efd13c
msgid "Rotated window height"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_close:1
# 55d400b71f2043519a0cc21c48975948
msgid "Event called when the window is closed"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_flip:1
# 8d205986921e4146a5ff662a1b4fbbe6
msgid "Flip between buffers (event)"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_key_down:1
# 67b06242449f4ebaba931803799af09c
msgid "Event called when a key is down (same arguments as on_keyboard)"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_key_up:1
# a02fefb7eafa4f4580443a7a0118f9e5
msgid "Event called when a key is up (same arguments as on_keyboard)"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_keyboard:1
# 9547b038f1d5430e867683546ef6c726
msgid "Event called when keyboard is in action"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_keyboard:4
# 5489e325890648898e63e4f6ab1b7934
msgid "Some providers may omit `scancode`, `unicode` and/or `modifier`!"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_motion:1
# 501a112261e34e038a73887e23229a6e
msgid "Event called when a Motion Event is received."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_motion:5
# eca45c3d3207444a81959e3ceee5b445
msgid "One of 'begin', 'update', 'end'"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_motion:7
# 52030f70fdc94aac8a35351931681ab8
msgid "Motion Event currently dispatched"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_mouse_down:1
# e80d6bd906d14c0199bf4ba976dbad81
msgid "Event called when mouse is in action (press/release)"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_mouse_move:1
#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_mouse_up:1
# d2bb0677c1a84be1b876f11dfd15a9e6
# ba8cd2900a814dcbbbf3f6ae15176993
msgid "Event called when mouse is moving, with buttons pressed"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_resize:1
# 2209ca9d0bb447aa8c0b544b3657ac9b
msgid "Event called when the window is resized"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_rotate:1
# c2c7d385ba7e48e0b5da2a06d8062d13
msgid "Event called when the screen have been rotated"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_touch_down:1
# a783b20ef6614496a8b1d205bc056594
msgid "Event called when a touch is down"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_touch_move:1
# cbe564dfafa9415080b4109d603edde8
msgid "Event called when a touch move"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_touch_up:1
# bb463baab8cb47458ef46521f29c2c28
msgid "Event called when a touch up"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.release_keyboard:3
# a4b26a4fc33e4dd1afffa33746db2cc4
msgid "Internal method for widget, to release the real-keyboard. Check :func:`request_keyboard` to understand how it works."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.remove_widget:1
# ef24569e94284194a48d26e07284fd9d
msgid "Remove a widget from window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.request_keyboard:3
# e6d0315ca64d44fab648e862872eac98
msgid "Internal method for widget, to request the keyboard. This method is not intented to be used by end-user, however, if you want to use the real-keyboard (not virtual keyboard), you don't want to share it with another widget."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.request_keyboard:8
# afcd93b8e6be402c8ff76ec8f328b133
msgid "A widget can request the keyboard, indicating a callback to call when the keyboard will be released (or taken by another widget)."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.screenshot:1
# 7166f1866bbb4d9fa084a1254b63c1b5
msgid "Save the actual displayed image in a file"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.set_icon:1
# 8aaf37d0c8914f3eb8fed6404d6ea4a2
msgid "Set the icon of the window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.set_title:1
# ffde3e30b7ce41a7ac8a52c980086cd8
msgid "Set the window title."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.size:1
# abe8add261a84fa08db1aa97ce5ba449
msgid "Rotated size of the window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.system_size:1
# dc01464e2b3b4c5d8675cb3d86bbb6af
msgid "Real size of the window, without taking care of the rotation"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.toggle_fullscreen:1
# 07d2d44c472449848dafa7e6cd9278fb
msgid "Toggle fullscreen on window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.width:1
# f9452475b9a646198da5cf77829af5b3
msgid "Rotated window width"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Window:1
# 9cf9050b25a7417c80860ff78f276381
msgid "Instance of a :class:`WindowBase` implementation"
msgstr ""

