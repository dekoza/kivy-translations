# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-24 10:07\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.core.window.rst:3
# 82be00e2af214fb4aff28e9247796b8e
msgid "Window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window:2
# a2322caeed554cebadc9990a89af1713
msgid "Core class for create the default Kivy window. Kivy support only one window creation. Don't try to create more than one."
msgstr ""

#: ../../<autodoc>:1
#: ../../<autodoc>:1
# 006d1e4500684a2789e8f10c0dfe5031
# cc9a614bd44f40d49500886e615575fb
msgid "Bases: :class:`kivy.event.EventDispatcher`"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard:1
# b77577858d46451c9295b0c7fccfec8b
msgid "Keyboard interface, that is returned by :meth:`WindowBase.request_keyboard`. When you request a keyboard, you'll get an instance of this class. Whatever is the keyboard input (system or virtual keyboard), you'll receive event though this instance."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard:8
# 1861617422344b79b7d37ca51f4b7270
msgid "Fired when a new key is down"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard:10
#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:35
# 72b2a50f13ba4e52b564ea6a929580d9
# f2b0094d0c6f4c44b0b646f9e2213f19
msgid "Fired when a key is up"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard:12
# 9df9117c18ee4050884df9a5c4ecd0ba
msgid "Here is an example about how to request a Keyboard, according to the current configuration:"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.callback:1
# d67418169189495083e72db2d8ddeb7e
msgid "Callback that will be called when the keyboard is released"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.keycode_to_string:1
# 850c3031df5b4563ad9a94f20f09fb81
msgid "Convert a keycode number to a string, according to the :data:`Keyboard.keycodes`. If the value is not found inside the keycodes, it will return ''."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.keycodes:1
# 92e3aa3b7002429da5092c2921741178
msgid "Keycodes mapping, between str <-> int. Theses keycode are currently taken from pygame.key. But when a new provider will be used, it must do the translation to theses keycodes too."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.release:1
# 92eb79d58de2409c8cbb5a5f7eb7fc53
msgid "Call this method to release the current keyboard. This will ensure that keyboard is not attached to you anymore."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.string_to_keycode:1
# 6464271e41ff4e16a7f2c5cadc7747d1
msgid "Convert a string to a keycode number, according to the :data:`Keyboard.keycodes`. If the value is not found in the keycodes, it will return -1."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.target:1
# 4d5502341a9a4136936bf3106680af8e
msgid "Target that have requested the keyboard"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.widget:1
# d3af415cd34e446eaede48984e1c8727
msgid "VKeyboard widget, if allowed by the configuration"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.window:1
# d71a434988b64fd298a9e7eb0e642d15
msgid "Window which the keyboard is attached too"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:1
# 1e1737d22bf44d34a63778a8d14f7427
msgid "WindowBase is a abstract window widget, for any window implementation."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:5
# 7c8793d8ad8f4c9a853cd755fd696f8b
msgid "Make window as fullscreen, check config documentation for more explaination about the values."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:8
# 42e32b6e1c484673ba7c0389703f8837
msgid "Width of window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:10
# 6c9a7dfa5a5a482c9d69e11642ff1ec0
msgid "Height of window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:14
# 5da35337a1d04982bfc4f82188ea8b3c
msgid "Fired when a new :class:`~kivy.input.motionevent.MotionEvent` is dispatched"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:17
# cac4fdaed6c54e049216cbf2b79ffe3c
msgid "Fired when a new touch appear"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:19
# 02af7dd7b41b4d5a9d61df127b524b7d
msgid "Fired when an existing touch is moved"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:21
# f0669f3bf99a423bac935e47b85069c8
msgid "Fired when an existing touch disapear"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:23
# 2604f8696c4845a7b4684127b92321d9
msgid "Fired when the :class:`Window` is beeing drawed"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:25
# 735d6ace1c384ba0a0f59b9259379b56
msgid "Fired when the :class:`Window` GL surface is beeing flipped"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:27
# 21a52e778ae0436f886d8f638e6f2fd4
msgid "Fired when the :class:`Window` is beeing rotated"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:29
# ec9da0a0c6284292821c1a86181ef8b5
msgid "Fired when the :class:`Window` is closed"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:31
# 0463b802686a4f988ffdf494a73d7b02
msgid "Fired when the keyboard is in action"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:33
# 6a5738cf99474479b03dd49871be9133
msgid "Fired when a key is down"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.add_widget:1
# 560c331502474475b5c304ae5dc6a5eb
msgid "Add a widget on window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.center:1
# ca2a58d5fd824360ba271d17c5924783
msgid "Rotated window center"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.clear:1
# 0a42e5c5c17444a0858c26290da46e34
msgid "Clear the window with background color"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.clearcolor:1
# ca70797d996348b5bc892f19f69e795c
msgid "Color used to clear window::"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.close:1
# 46b130dc521a4ff2b3c4c38606cb39eb
msgid "Close the window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:1
# d6dff2f1987b4e549cbf3a3ab7e77a23
msgid "Will create the main window and configure it."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:4
# 4aedad561c56434f8f1a75081de2a7b9
msgid "This method is called automatically at runtime. If you call it, it will recreate a RenderContext and Canvas. This mean you'll have a new graphics tree, and the old one will be unusable."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:8
# c5bc6d7770c840309c75b17a5ef8055a
msgid "This method exist to permit the creation of a new OpenGL context AFTER closing the first one. (Like using runTouchApp() and stopTouchApp())."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:12
# ff755e7ddfd240bb87530e80a453e37e
msgid "This method have been only tested in unittest environment, and will be not suitable for Applications."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:15
# 1a561184b2f947ef835d39a324ce1a12
msgid "Again, don't use this method unless you know exactly what you are doing !"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.flip:1
# fdbe536ebe7f42b385a144c3b6ea470d
msgid "Flip between buffers"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.height:1
# c62fe16bb92147a19278b92c02768513
msgid "Rotated window height"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_close:1
# 40eb09e1e3504f0cac089989e5d1fdb4
msgid "Event called when the window is closed"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_flip:1
# befb024ad79540fcb47c27a2437c5403
msgid "Flip between buffers (event)"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_key_down:1
# b8a7d335c7844f2a8fb73bbca0aaacec
msgid "Event called when a key is down (same arguments as on_keyboard)"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_key_up:1
# 5859ee3aa8984122ad2272e337f54005
msgid "Event called when a key is up (same arguments as on_keyboard)"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_keyboard:1
# 6e7f6cc688c4400cbc2f6f1549a61173
msgid "Event called when keyboard is in action"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_keyboard:4
# 046f5b7b776d4665a7dac118a74ad609
msgid "Some providers may omit `scancode`, `unicode` and/or `modifier`!"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_motion:1
# 46198ca30f6b40d0ba8af6506f07e483
msgid "Event called when a Motion Event is received."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_motion:5
# 14952b0d2a454d3db3c26471fe970c80
msgid "One of 'begin', 'update', 'end'"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_motion:7
# ddbe2b3dc32e4d7a8cf02ac36cace541
msgid "Motion Event currently dispatched"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_mouse_down:1
# 51968d3cd1cc42d1ac03dbfdafe7664e
msgid "Event called when mouse is in action (press/release)"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_mouse_move:1
#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_mouse_up:1
# 86098abfab8b4efeb87d4a310185cfce
# c2c9433c8f2848eea96fd969d19c24a2
msgid "Event called when mouse is moving, with buttons pressed"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_resize:1
# 0cfb0019f04345098dd1d353a1db7e15
msgid "Event called when the window is resized"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_rotate:1
# cb29da758c724b0faf4ae9ee38a851f4
msgid "Event called when the screen have been rotated"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_touch_down:1
# 05d52b8acb1741009019d54dd664ec48
msgid "Event called when a touch is down"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_touch_move:1
# 4b1ab9f5ddf74bceb8448e645f50f413
msgid "Event called when a touch move"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_touch_up:1
# 5c077bb5acb54816b557d7e57ad2b726
msgid "Event called when a touch up"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.release_all_keyboards:3
# dd06094379b54dc594c7326ee14dce92
msgid "This will ensure that no virtual keyboard / system keyboard are actually requested. All will be closed."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.release_keyboard:3
# 9bda9b71be1f4940a6419fc4c7cea318
msgid "Internal method for widget, to release the real-keyboard. Check :func:`request_keyboard` to understand how it works."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.remove_widget:1
# 6674e4a456b24195813647c201eb7305
msgid "Remove a widget from window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.request_keyboard:3
# 934eef707f744102ba35412ec0b67f3e
msgid "Internal method for widget, to request the keyboard. This method is not intented to be used by end-user, however, if you want to use the real-keyboard (not virtual keyboard), you don't want to share it with another widget."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.request_keyboard:8
# 2323aee422c0439e91f5f6c6863e3d62
msgid "A widget can request the keyboard, indicating a callback to call when the keyboard will be released (or taken by another widget)."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.request_keyboard:13
# 27366575de634d779c1cb99a660a6ff2
msgid "Callback that will be called when the keyboard is closed. It can be because somebody else requested the keyboard, or if the user itself closed it."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.request_keyboard:17
# 0624257bd59f4f3aab91e3060a18b4a6
msgid "Attach the keyboard to the specified target. Ensure you have a target attached if you're using the keyboard in a multi users mode."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.request_keyboard:22
# ce1c44395d0b4d68999d02a7dae7511b
msgid "An instance of :class:`Keyboard`, containing the callback, target, and if configuration allowed it, a VKeyboard instance."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.screenshot:1
# 0d2577bf90204f3b96447d582ada129a
msgid "Save the actual displayed image in a file"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.set_icon:1
# fea4aa0ca16a4670af63a0e68cdc3dc9
msgid "Set the icon of the window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.set_title:1
# 0e9a719677e9436aabf26de339a2a03a
msgid "Set the window title."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.set_vkeyboard_class:3
# 558bfc07fce7404dab33044e565429d0
msgid "Set the VKeyboard class to use. If None set, it will use the :class:`kivy.uix.vkeyboard.VKeyboard`."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.size:1
# 6628a7e707de434db736a11255fafc20
msgid "Rotated size of the window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.system_size:1
# 264eb027fdbc40f7846b340cc4bb3a26
msgid "Real size of the window, without taking care of the rotation"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.toggle_fullscreen:1
# 37e0d224d7594a7d8aff7800973ce436
msgid "Toggle fullscreen on window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.width:1
# e1106f47233d4e118458bb97d0ae8db4
msgid "Rotated window width"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Window:1
# 45f2684bc048459799ee83d60e2e68d8
msgid "Instance of a :class:`WindowBase` implementation"
msgstr ""

