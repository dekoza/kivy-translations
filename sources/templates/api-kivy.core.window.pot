# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-21 21:22\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.core.window.rst:3
# 910692b46971455788186d6b74d0164e
msgid "Window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window:2
# d1b5fe70aa0d4c6ea2c24438740c01a7
msgid "Core class for create the default Kivy window. Kivy support only one window creation. Don't try to create more than one."
msgstr ""

#: ../../<autodoc>:1
#: ../../<autodoc>:1
# 34cc3e2e824d4cf7beba1e0d0207f570
# 28f139b7b21c4d8c84db95ed0589b60e
msgid "Bases: :class:`kivy.event.EventDispatcher`"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard:1
# ca9be299d3b84f2a984c6f6614c559f6
msgid "Keyboard interface, that is returned by :meth:`WindowBase.request_keyboard`. When you request a keyboard, you'll get an instance of this class. Whatever is the keyboard input (system or virtual keyboard), you'll receive event though this instance."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard:8
# af9add64418b456db643446d72c360c6
msgid "Fired when a new key is down"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard:10
#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:35
# ff59351eea4c484e8195cc5a5a58ce94
# 98aef6db24a84ad9897980c434888eb8
msgid "Fired when a key is up"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard:12
# e7eca47494d54b36bba7b64d9facc6c5
msgid "Here is an example about how to request a Keyboard, according to the current configuration:"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.callback:1
# cf73fcc34d8a4bc591f5b2805033713a
msgid "Callback that will be called when the keyboard is released"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.keycode_to_string:1
# dee398b995c6459c8eb287438443dc7c
msgid "Convert a keycode number to a string, according to the :data:`Keyboard.keycodes`. If the value is not found inside the keycodes, it will return ''."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.keycodes:1
# b3c7aa1dcb9e4f10b10c0d82c54d55d7
msgid "Keycodes mapping, between str <-> int. Theses keycode are currently taken from pygame.key. But when a new provider will be used, it must do the translation to theses keycodes too."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.release:1
# fa570a773ed24ae5ad6ffc4c15f43906
msgid "Call this method to release the current keyboard. This will ensure that keyboard is not attached to you anymore."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.string_to_keycode:1
# 1d1748be40604606be2f55acc0ba6bbd
msgid "Convert a string to a keycode number, according to the :data:`Keyboard.keycodes`. If the value is not found in the keycodes, it will return -1."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.target:1
# 246a1558299e4d78826456e057bb515d
msgid "Target that have requested the keyboard"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.widget:1
# f16ab88cc79043038611b52d87987972
msgid "VKeyboard widget, if allowed by the configuration"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Keyboard.window:1
# 1e54dc73c44641a8a69301bd29655b1a
msgid "Window which the keyboard is attached too"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:1
# 2da61d2bf94a43b79dc9d547823c749e
msgid "WindowBase is a abstract window widget, for any window implementation."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:5
# 653e92679fec4d06b1259536226629e6
msgid "Make window as fullscreen, check config documentation for more explaination about the values."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:8
# 7969d433cb284a33948bdcc4a60517c4
msgid "Width of window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:10
# 560e518040af486fa557b7bce1e3aeb2
msgid "Height of window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:14
# 0830c2e080fa4e99bd6e15f726dc7e4c
msgid "Fired when a new :class:`~kivy.input.motionevent.MotionEvent` is dispatched"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:17
# 895d8d17df714bada67a5a165f73ae47
msgid "Fired when a new touch appear"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:19
# 0179d29e5b0344e6bb1a7b10939c953c
msgid "Fired when an existing touch is moved"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:21
# 2c025b4911cf4c0a8320b46d4b3742ae
msgid "Fired when an existing touch disapear"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:23
# c2d573f96ec849b48e93c75c5b64a75f
msgid "Fired when the :class:`Window` is beeing drawed"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:25
# 061db9ddbf914a468354f0641145f4c2
msgid "Fired when the :class:`Window` GL surface is beeing flipped"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:27
# f6d403658a8f47eeae436748846832e4
msgid "Fired when the :class:`Window` is beeing rotated"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:29
# 333060f6db264eeea369b79513744a6c
msgid "Fired when the :class:`Window` is closed"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:31
# 2f485132ae53473c8441a7a8e589c16a
msgid "Fired when the keyboard is in action"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase:33
# 67620e090aa8450bbd0cbe6ecf39606f
msgid "Fired when a key is down"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.add_widget:1
# 136d22c1ad37446db19b17c1e04a6daf
msgid "Add a widget on window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.center:1
# 8c06a9d8d13947b2831e98ce5b728d7c
msgid "Rotated window center"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.clear:1
# dc81b2e49295435baa5c7eab1dbb4400
msgid "Clear the window with background color"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.clearcolor:1
# 7f5bc13d5642468c918c04433b6a93ce
msgid "Color used to clear window::"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.close:1
# 11b33c2c1b274de0848e13678b8a7792
msgid "Close the window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:1
# fe03a7073ca340aabe301b993275a5c6
msgid "Will create the main window and configure it."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:4
# dc55c86f43ee490ca88d88eb072e3d6b
msgid "This method is called automatically at runtime. If you call it, it will recreate a RenderContext and Canvas. This mean you'll have a new graphics tree, and the old one will be unusable."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:8
# 7592335647a54f0a81c90f95d7e75caf
msgid "This method exist to permit the creation of a new OpenGL context AFTER closing the first one. (Like using runTouchApp() and stopTouchApp())."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:12
# e18cbf61124c48d78eac6a9e5cdeed49
msgid "This method have been only tested in unittest environment, and will be not suitable for Applications."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.create_window:15
# 11f120fe231f45268610dda33fe6301c
msgid "Again, don't use this method unless you know exactly what you are doing !"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.flip:1
# a608c736faf0476b813c824554c81181
msgid "Flip between buffers"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.height:1
# f170793e83d14ee6a74f8d8299a8af94
msgid "Rotated window height"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_close:1
# d7003a37fc6b4066b7b8ecdd293d2a20
msgid "Event called when the window is closed"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_flip:1
# 05d79450187c46cfbe95046868b5d2ed
msgid "Flip between buffers (event)"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_key_down:1
# 1d2c16ba2567432c9e06c730a816e0eb
msgid "Event called when a key is down (same arguments as on_keyboard)"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_key_up:1
# d0b6d53971de4679b3b21a4f817e8acf
msgid "Event called when a key is up (same arguments as on_keyboard)"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_keyboard:1
# 2359a482dc1f4afda5aa7310ff45719b
msgid "Event called when keyboard is in action"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_keyboard:4
# 6e878d39548f4081901d3d6500755c58
msgid "Some providers may omit `scancode`, `unicode` and/or `modifier`!"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_motion:1
# 7f7c5fe103ab497ab1510e07ae396012
msgid "Event called when a Motion Event is received."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_motion:5
# cf23278f04a345009e2613b3c0bcdbf0
msgid "One of 'begin', 'update', 'end'"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_motion:7
# 7a47894fa2554b4ab596d3747ec93f11
msgid "Motion Event currently dispatched"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_mouse_down:1
# 57745a51c4044dbb8f371404015cdf69
msgid "Event called when mouse is in action (press/release)"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_mouse_move:1
#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_mouse_up:1
# efca46d849b045548fe125b74ef6f492
# 14bc334f1768443f88e47048c36e9f7a
msgid "Event called when mouse is moving, with buttons pressed"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_resize:1
# dde136917f4f4c80bed8cdcb85ca1e77
msgid "Event called when the window is resized"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_rotate:1
# 2551372156534905959d09fb83a6b25f
msgid "Event called when the screen have been rotated"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_touch_down:1
# 6383b83b224e4a309e2010063081e102
msgid "Event called when a touch is down"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_touch_move:1
# 8612fec4e1584939a2d9e6ad8fa26475
msgid "Event called when a touch move"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.on_touch_up:1
# 5ad0c5954049447d84156fcbdeb2fb43
msgid "Event called when a touch up"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.release_all_keyboards:3
# 909dca105aa9497eb43216e02124280e
msgid "This will ensure that no virtual keyboard / system keyboard are actually requested. All will be closed."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.release_keyboard:3
# f3c684a7ac1149fbb88cdc4e8522dcef
msgid "Internal method for widget, to release the real-keyboard. Check :func:`request_keyboard` to understand how it works."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.remove_widget:1
# e26e80c30c5a4c81aa70c96a7f34bf0b
msgid "Remove a widget from window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.request_keyboard:3
# 74623d199e4f4bda8ef431cc6abe9dbd
msgid "Internal method for widget, to request the keyboard. This method is not intented to be used by end-user, however, if you want to use the real-keyboard (not virtual keyboard), you don't want to share it with another widget."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.request_keyboard:8
# 2f91a4b1f4884218989074c3e2ff6a6a
msgid "A widget can request the keyboard, indicating a callback to call when the keyboard will be released (or taken by another widget)."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.request_keyboard:13
# 79a0d6ccf4224e42ba5241a0178c8cdc
msgid "Callback that will be called when the keyboard is closed. It can be because somebody else requested the keyboard, or if the user itself closed it."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.request_keyboard:17
# a224aa809075449d88f82264e7b18c24
msgid "Attach the keyboard to the specified target. Ensure you have a target attached if you're using the keyboard in a multi users mode."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.request_keyboard:22
# 0719583c66254c23849ec9b5300871de
msgid "An instance of :class:`Keyboard`, containing the callback, target, and if configuration allowed it, a VKeyboard instance."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.screenshot:1
# bed7e38941054e1eaf29d9925e321e76
msgid "Save the actual displayed image in a file"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.set_icon:1
# 90651bf515e64903b99fb7b8ef50699e
msgid "Set the icon of the window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.set_title:1
# c9eeb91d1c5c49bfba92d0baac42c9bb
msgid "Set the window title."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.set_vkeyboard_class:3
# 46ebfcf737fd4bdda2642e31c2d41d3f
msgid "Set the VKeyboard class to use. If None set, it will use the :class:`kivy.uix.vkeyboard.VKeyboard`."
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.size:1
# d7f9cd147bcc499b8a8644c648e8e854
msgid "Rotated size of the window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.system_size:1
# 65e6ec84dbd54045b3c1ee78518c70c0
msgid "Real size of the window, without taking care of the rotation"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.toggle_fullscreen:1
# 0a52c70f65314cf99218c6019143f1a0
msgid "Toggle fullscreen on window"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.WindowBase.width:1
# b9d06794d0c948a9b044c07484ea9136
msgid "Rotated window width"
msgstr ""

#: ../../../kivy/core/window/__init__.py:docstring of kivy.core.window.Window:1
# bd27336304284991995925d1922b3fdc
msgid "Instance of a :class:`WindowBase` implementation"
msgstr ""

