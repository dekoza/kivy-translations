# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-15 00:13\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.network.urlrequest.rst:3
# d3eeff93b34c4056881e6a8ecc4be36f
msgid "Url Request"
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest:4
# 1278b13c664f40cebb160e34bff7808e
msgid "You can use the :class:`UrlRequest` to make asynchronous request on the web, and get the result when the request is completed. The spirit is the same as XHR object in Javascript."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest:8
# 8b7af2d4fbf540aa9b159b58fd8ba5d5
msgid "The content is also decoded, aka for now, if the Content-Type is application/json, the result will be automatically passed through json.loads."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest:12
# de247da042314f1386a534660a0de6e6
msgid "The syntax to create a request::"
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest:18
# b86d0bc4537345449d9a6aa44ee99e78
msgid "Only the first argument is mandatory, all the rest is optional. By default, a \"GET\" request will be done. If :data:`UrlRequest.req_body` is not None, a \"POST\" request will be done. It's up to you to adjust :data:`UrlRequest.req_headers` if necessary."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest:24
# 59c209774fec4e2dbd9978b76d8d8a25
msgid "Example of fetching twitter trends::"
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest:36
# a7ce1ed7bce440c584ed4d84b1113655
msgid "Example of Posting data (adapted from httplib example)::"
msgstr ""

#: ../../<autodoc>:1
# 340ed77a253d4b039374b33a8725ac9b
msgid "Bases: :class:`threading.Thread`"
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest:1
# d38622f6fe1341cc8abdf6f57da46bd8
msgid "Url request. See module documentation for usage."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest:5
# da912d94a1604941b190ad64fb6f5086
msgid "Complete url string to call."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest:7
# cb60cfd72f0d47c8b940b95bfe8f4c51
msgid "Callback function to call when the result have been fetched"
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest:9
# e1c9858d8d434f2685cb25392a92b52b
msgid "Callback function to call when an error happen"
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest:11
# b4df4906f7b64ad6ab0302e9f052d615
msgid "Callback function that will be called to report progression of the download. `total_size` might be -1 if no Content-Length have been reported in the http response. This callback will be called after each `chunk_size` read."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest:16
# 8374235fa2394ae4a1e8f4d250ad6900
msgid "Data to sent in the request. If it's not None, a POST will be done instead of a GET"
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest:19
# 2bf535aa08ed4074a033e189e9b5855a
msgid "Custom headers to add for the request"
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest:21
# c928146ddbc9409cae6cf40ef72d44d8
msgid "Size of each chunk to read, used only when `on_progress` callback have been set. If you decrease it too much, a lot of on_progress will be fired, and will slow down your download. If you want to have the maximum download speed, increase chunk_size, or don't use on_progress."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest:27
# 24983c6a07604aea9b652b051fe6e36a
msgid "If set, blocking operations will timeout after that many seconds."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest.chunk_size:1
# 7fb79defa42248e997b593fec11db219
msgid "Return the size of a chunk, used only in \"progress\" mode (when on_progress callback is set.)"
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest.decode_result:1
# 6b0d14b33bb148e296cd9530f55a818d
msgid "Decode the result fetched from url according to his Content-Type. Actually, only decode application/json."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest.error:1
# 1fc2801f948144e681ab59cbd3da034d
msgid "Return the error of the request. This value is not undeterminate until the request is finished."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest.get_connection_for_scheme:1
# 0cf1c09f4c614c51b5b791637d92c70e
msgid "Return the Connection class from a particular scheme. This is an internal that can be expanded to support custom scheme."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest.get_connection_for_scheme:4
# faa4e6e5534f4dbd9a86637bfb696b7f
msgid "Actual supported schemes: http, https."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest.is_finished:1
# e741426a7c404b738c2e8f1fd1ba10a0
msgid "Return True if the request have finished, whatever is if it's a success or a failure."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest.req_body:1
# 38f5cd9c3681410ea599077a8dbbfca9
msgid "Request body passed in __init__"
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest.req_headers:1
# 5343d95218c0430bba6eb40d377798e6
msgid "Request headers passed in __init__"
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest.resp_headers:1
# a5a004837c004c2a83c4ac95e214bcef
msgid "If the request have been done, return a dictionnary containing the headers of the response. Otherwise, it will return None"
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest.resp_status:1
# 6bd1e6b818694f3c8c7e95395c8f7dec
msgid "Return the status code of the response if the request have been done, otherwise, return None"
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest.result:1
# a46818e06b8141258b7c5cce710771d3
msgid "Return the result of the request. This value is not undeterminate until the request is finished."
msgstr ""

#: ../../../kivy/network/urlrequest.py:docstring of kivy.network.urlrequest.UrlRequest.url:1
# cc5781389bbd4c2bae47dd2fb3d29095
msgid "Url of the request"
msgstr ""

