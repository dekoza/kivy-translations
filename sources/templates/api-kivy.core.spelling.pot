# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-24 10:21\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.core.spelling.rst:3
# fb51fbcc8999467ea92b799fa8b18587
msgid "Spelling"
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling:2
# 8431426f9b914cdd84d74f34669fcae9
msgid "Provide abstracted access to a range of spellchecking backends.  Also provides word suggestions. The API is inspired by enchant, but other backends can be added that implement the same API."
msgstr ""

#: ../../<autodoc>:1
# 0d1f55e6179b47b68b60c181707e8dac
msgid "Bases: :class:`object`"
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase:1
# 378e3a2378e04015b1811c8cf107e0d9
msgid "Base class for all spelling providers. Supports some abstract methods for checking words and getting suggestions."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:1
# e4e3becc7a10471cbac1f177a9de6d86
msgid "If `word` is a valid word in `self._language`, return True."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.check:5
# 436256624ae741049855df0592ff4e40
msgid "The word to check. If the word is a valid word in the currently active language, True is returned. If the word shouldn't be checked, return None (e.g. for '')."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.list_languages:1
# 43c8ab73aba74810a008c4e9db125792
msgid "Return a list of all languages supported by the registered languages. E.g.: ['en', 'en_GB', 'en_US', 'de', ...]"
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:1
# 261d641983f84e64918e4cbfc08e43c9
msgid "From the set of registered languages, select the first language for `language`."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.select_language:6
# 00fc5ba0c44b4b5c9f6ca7b02927bc52
msgid "Language identifier. Needs to be one of the options returned by list_languages(). Sets the language used for spell checking and word suggestions."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:1
# 4c008b3d975b42169e9368e5de7eebad
msgid "For a given `fragment` (i.e., part of a word or a word by itself), provide corrections (`fragment` may be misspelled) or completions as a list of strings."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.SpellingBase.suggest:7
# 35b43f6a6d254b94b8e6e5669599784d
msgid "The word fragment to get suggestions/corrections for. E.g.: 'foo' might become 'of', 'food' or 'foot'."
msgstr ""

#: ../../<autodoc>:1
#: ../../<autodoc>:1
# 588525cbdfaf4a2e84d4d0681055c5a3
# 319d31f7847448bea54b7bae04686e72
msgid "Bases: :class:`exceptions.Exception`"
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoSuchLangError:1
# f00ba7594e31463386f1453eabc26429
msgid "Exception to be raised when a specific language could not be found."
msgstr ""

#: ../../../kivy/core/spelling/__init__.py:docstring of kivy.core.spelling.NoLanguageSelectedError:1
# 68ca5f0373584dcf927e9b6c91a1bf5e
msgid "Exception to be raised when a language-using method is called but no language was selected prior to the call."
msgstr ""

