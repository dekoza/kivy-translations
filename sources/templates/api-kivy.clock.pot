# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: 1.0.8-dev\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-10-24 09:42\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../sources/api-kivy.clock.rst:3
# 93b8b326efc54fa6b151c71bae7d522b
msgid "Clock object"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock:2
# 1831d710b6ad464c8dc1e192a6ca6847
msgid "The :class:`Clock` object allows you to schedule a function call in the future; once or on interval. ::"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock:19
# f33b842e01664709af97a6ecff67d960
msgid "If the callback returns False, the schedule will be removed."
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock:22
# d88a9d9a27754a66b1e1ae809ddff0f7
msgid "Schedule before frame"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock:26
# 543a739f7918472885162d576ce971f9
msgid "Sometimes you need to schedule a callback BEFORE the next frame. Starting  from 1.0.5, you can use a timeout of -1::"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock:32
# 04d23de5096246efbc17363ad56634cd
msgid "The Clock will execute all the callbacks with a timeout of -1 before the next frame, even if you add a new callback with -1 from a running callback.  However, :class:`Clock` has an iteration limit for these callbacks, it defaults  to 10."
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock:37
# df62c263ec924d94b8c2d9cdfd5106e7
msgid "If you schedule a callback that schedules a callback that schedules a .. etc more than 10 times, it will leave the loop and send a warning to the console, then continue after the next frame. This is implemented to prevent bugs from  hanging or crashing the application."
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock:42
# ab3f5ec9892b4d37ab77518946c1d472
msgid "If you need to increase the limit, set the :data:`max_iteration` property::"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock:48
# a1b0fbe84c384a398d0d9261fb60986c
msgid "Triggered Events"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock:52
# 168313f66a1a4d28ac1f8d7b18ef58e7
msgid "A triggered event is a way to defer a callback exactly like schedule_once(), but with some added convenience. The callback will only be scheduled once per  frame, even if you call the trigger twice (or more). This is not the case  with :func:`Clock.schedule_once` ::"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock:66
# e01d42ec6e0140dfa8e71a4bcb72f7b6
msgid "Before triggered events, you may have used this approach in a widget ::"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock:72
# f8537e9fa6d24c6eb73fb138b1dd2612
msgid "As soon as you call `trigger_callback()`, it will correctly schedule the callback once in the next frame. It is more convenient to create and bind to  the triggered event than using :func:`Clock.schedule_once` in a function ::"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock:88
# 701ead0e48a54f83a2d68f3664e12eef
msgid "Even if x and y changes within one frame, the callback is only run once."
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock:92
# 939248d2082842f78ff2493084f6a2d5
msgid ":func:`Clock.create_trigger` also has a timeout parameter that behaves  exactly like :func:`Clock.schedule_once`."
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.Clock:1
# 24822f2f1d1c4c208a9ede47142c06c8
msgid "Instance of the ClockBase, available for everybody"
msgstr ""

#: ../../<autodoc>:1
# 7cf7a1d4572a44eeb93c10bb8b976e87
msgid "Bases: :class:`object`"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.ClockBase:1
# e13e2ee852ad492180ea238024c34684
msgid "A clock object with event support"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.ClockBase.create_trigger:1
# 39a0aec15ac94b1aab33b8c2f1d3fe64
msgid "Create a Trigger event. Check module documentation for more information."
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.ClockBase.frametime:1
# 6a1e16fcfa4f4a00acbe18688b6cd566
msgid "Time spent between last frame and current frame (in seconds)"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.ClockBase.get_boottime:1
# a7cadb8e60434e5290ecd1454b5afaa3
msgid "Get time in seconds from the application start"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.ClockBase.get_fps:1
# fb752160838e443e80159b1d0c999a44
msgid "Get the current average FPS calculated by the clock"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.ClockBase.get_rfps:1
# 8e607b433a5a42d58ae30d6d8c12bed5
msgid "Get the current \"real\" FPS calculated by the clock. This counter reflects the real framerate displayed on the screen."
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.ClockBase.get_rfps:4
# 26182e9ac7e949f79131456a11bd2409
msgid "In contrast to get_fps(), this function returns a counter of the number of frames, not an average of frames per second"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.ClockBase.get_time:1
# fd7da18fb5b8460bbc49b44a67a9195b
msgid "Get the last tick made by the clock"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.ClockBase.schedule_interval:1
# a3dae0fbbc8441fbbfa4e9ebf88a008b
msgid "Schedule an event to be called every <timeout> seconds"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.ClockBase.schedule_once:1
# 5c7d38579a1d4be1affcf368ce8c55bf
msgid "Schedule an event in <timeout> seconds."
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.ClockBase.tick:1
# 96332a6829d141718db5839bfe9f5192
msgid "Advance clock to the next step. Must be called every frame. The default clock have the tick() function called by Kivy"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.ClockBase.tick_draw:1
# 6b5d806f72ad4a3997d77fcea1659abb
msgid "Tick the drawing counter"
msgstr ""

#: ../../../kivy/clock.py:docstring of kivy.clock.ClockBase.unschedule:1
# 03e8384aa3d848bea999d56d59427de8
msgid "Remove a previously scheduled event."
msgstr ""

