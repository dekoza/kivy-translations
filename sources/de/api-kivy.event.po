# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010, The Kivy Authors
# This file is distributed under the same license as the Kivy package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2011-09-28 17:19\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: de\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"X-Generator: Translate Toolkit 1.9.0\n"

# e8aa31c433104492a210bb5e20e0f793
#: ../../sources/api-kivy.event.rst:3
msgid "Event dispatcher"
msgstr ""

# 6b1d9327dac94867a9cb6c279c53ab9e
#: ../../docstring of kivy.event:2
msgid "All objects that produce events in Kivy implement :class:`EventDispatcher`, providing a consistent interface for registering and manipulating event handlers."
msgstr ""

# fddf174315e742409266ace1329cd0e6
#: ../../<autodoc>:1
msgid "Bases: :class:`object`"
msgstr ""

# e824d0cb4c91418aa93a4d703e71e985
#: ../../docstring of kivy.event.EventDispatcher:1
msgid "Generic event dispatcher interface"
msgstr ""

# 0172799afde9490382a16760cfa3b4a0
#: ../../docstring of kivy.event.EventDispatcher:3
msgid "See the module docstring for usage."
msgstr ""

# 346e4720b9214444b1ebe77b3d473bbf
#: ../../docstring of kivy.event.EventDispatcher.bind:1
msgid "Bind an event type or a property to a callback"
msgstr ""

# afe0aaff0dda4b2aaa255346ffe92b25
#: ../../docstring of kivy.event.EventDispatcher.bind:3
msgid "Usage::"
msgstr ""

# 4b689ebabb86438aaef66e9cb3caab34
#: ../../docstring of kivy.event.EventDispatcher.dispatch:1
msgid "Dispatch an event across all the handler added in bind(). As soon as a handler return True, the dispatching stop"
msgstr ""

# 049c30de9d484ffd9d0e8cd7d9b7adfa
#: ../../docstring of kivy.event.EventDispatcher.is_event_type:1
msgid "Return True if the event_type is already registered."
msgstr ""

# 7fc7a155f7e74a58bd80a126e719875c
#: ../../docstring of kivy.event.EventDispatcher.register_event_type:1
msgid "Register an event type with the dispatcher."
msgstr ""

# 78e23f1835654ace9b3015f3aa5188df
#: ../../docstring of kivy.event.EventDispatcher.register_event_type:3
msgid "Registering event types allows the dispatcher to validate event handler names as they are attached, and to search attached objects for suitable handlers. Each event type declaration must :"
msgstr ""

# f559db86f5cf45688f5be4f69e282bc8
#: ../../docstring of kivy.event.EventDispatcher.register_event_type:7
msgid "start with the prefix `on_`"
msgstr ""

# bbad1ec2164f412ab980a9d983246b40
#: ../../docstring of kivy.event.EventDispatcher.register_event_type:8
msgid "have a default handler in the class"
msgstr ""

# d61e70763fd444e0abfaebce9a0753dd
#: ../../docstring of kivy.event.EventDispatcher.register_event_type:10
msgid "Example of creating custom event::"
msgstr ""

# ae820c2e9e3a48a4bd1797edd1606bec
#: ../../docstring of kivy.event.EventDispatcher.unbind:1
msgid "Unbind properties from callback functions."
msgstr ""

# 3ed662bc40bb474498037b910f6d84e5
#: ../../docstring of kivy.event.EventDispatcher.unbind:3
msgid "Same usage as bind()."
msgstr ""

# 5b7a4caf71244c3ab3dc7e0860613190
#: ../../docstring of kivy.event.EventDispatcher.unregister_event_types:1
msgid "Unregister an event type in the dispatcher"
msgstr ""
